{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/GitHub/remotesports/client/src/pages/Room.js\";\nimport React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { toast } from \"react-toastify\";\nimport { auth, db } from \"../firebase\";\nimport { IconButton, Badge, Input, Button } from \"@material-ui/core\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport ScreenShareIcon from \"@material-ui/icons/ScreenShare\";\nimport StopScreenShareIcon from \"@material-ui/icons/StopScreenShare\";\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport { message } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { Row } from \"reactstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../css/Room.css\";\nconst server_url = \"http://localhost:8000\";\nvar connections = {};\nconst peerConnectionConfig = {\n  iceServers: [// { 'urls': 'stun:stun.services.mozilla.com' },\n  {\n    urls: \"stun:stun.l.google.com:19302\"\n  }]\n};\nvar socket = null;\nvar socketId = null;\nvar elms = 0;\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUsername = () => {\n      if (auth.currentUser) {\n        db.collection(\"users\").doc(auth.currentUser.uid).get().then(function (doc) {\n          if (doc.exists) {\n            this.setState({\n              username: doc.data().name\n            });\n            return false;\n          }\n        }).catch(function (error) {\n          console.log(error.message);\n        });\n      } else {\n        return true;\n      }\n    };\n\n    this.getPermissions = async () => {\n      try {\n        await navigator.mediaDevices.getUserMedia({\n          video: true\n        }).then(() => this.videoAvailable = true).catch(() => this.videoAvailable = false);\n        await navigator.mediaDevices.getUserMedia({\n          audio: true\n        }).then(() => this.audioAvailable = true).catch(() => this.audioAvailable = false);\n\n        if (navigator.mediaDevices.getDisplayMedia) {\n          this.setState({\n            screenAvailable: true\n          });\n        } else {\n          this.setState({\n            screenAvailable: false\n          });\n        }\n\n        if (this.videoAvailable || this.audioAvailable) {\n          navigator.mediaDevices.getUserMedia({\n            video: this.videoAvailable,\n            audio: this.audioAvailable\n          }).then(stream => {\n            window.localStream = stream;\n            this.localVideoref.current.srcObject = stream;\n          }).then(stream => {}).catch(e => console.log(e));\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getMedia = () => {\n      // Primeira função a ser lida\n      // Tentamos ir buscar o video e audio do utilizador\n      this.setState({\n        video: this.videoAvailable,\n        audio: this.audioAvailable\n      }, () => {\n        this.getUserMedia(); //atribuir media ao utilizador\n\n        this.connectToSocketServer(); // conecção a sala\n      });\n    };\n\n    this.getUserMedia = () => {\n      if (this.state.video && this.videoAvailable || this.state.audio && this.audioAvailable) {\n        // se conseguirmos atribuir a media e audio ao utilizador\n        navigator.mediaDevices.getUserMedia({\n          video: this.state.video,\n          audio: this.state.audio\n        }).then(this.getUserMediaSuccess).then(stream => {}).catch(e => console.log(e));\n      } else {\n        try {\n          let tracks = this.localVideoref.current.srcObject.getTracks();\n          tracks.forEach(track => track.stop());\n        } catch (e) {}\n      }\n    };\n\n    this.getUserMediaSuccess = stream => {\n      try {\n        window.localStream.getTracks().forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n\n      for (let id in connections) {\n        if (id === socketId) continue;\n        connections[id].addStream(window.localStream);\n        connections[id].createOffer().then(description => {\n          connections[id].setLocalDescription(description).then(() => {\n            socket.emit(\"signal\", id, JSON.stringify({\n              sdp: connections[id].localDescription\n            }));\n          }).catch(e => console.log(e));\n        });\n      }\n\n      stream.getTracks().forEach(track => track.onended = () => {\n        this.setState({\n          video: false,\n          audio: false\n        }, () => {\n          try {\n            let tracks = this.localVideoref.current.srcObject.getTracks();\n            tracks.forEach(track => track.stop());\n          } catch (e) {\n            console.log(e);\n          }\n\n          let blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()]);\n\n          window.localStream = blackSilence();\n          this.localVideoref.current.srcObject = window.localStream;\n\n          for (let id in connections) {\n            connections[id].addStream(window.localStream);\n            connections[id].createOffer().then(description => {\n              connections[id].setLocalDescription(description).then(() => {\n                socket.emit(\"signal\", id, JSON.stringify({\n                  sdp: connections[id].localDescription\n                }));\n              }).catch(e => console.log(e));\n            });\n          }\n        });\n      });\n    };\n\n    this.getDislayMedia = () => {\n      //media a ser \"displayed\" do utilizador\n      if (this.state.screen) {\n        if (navigator.mediaDevices.getDisplayMedia) {\n          navigator.mediaDevices.getDisplayMedia({\n            video: true,\n            audio: true\n          }).then(this.getDislayMediaSuccess).then(stream => {}).catch(e => console.log(e));\n        }\n      }\n    };\n\n    this.getDislayMediaSuccess = stream => {\n      try {\n        window.localStream.getTracks().forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n\n      for (let id in connections) {\n        if (id === socketId) continue;\n        connections[id].addStream(window.localStream); //adicionar a stream do utilizador\n\n        connections[id].createOffer().then(description => {\n          connections[id].setLocalDescription(description).then(() => {\n            socket.emit(\"signal\", id, JSON.stringify({\n              sdp: connections[id].localDescription\n            }));\n          }).catch(e => console.log(e));\n        });\n      }\n\n      stream.getTracks().forEach(track => track.onended = () => {\n        this.setState({\n          screen: false\n        }, () => {\n          try {\n            let tracks = this.localVideoref.current.srcObject.getTracks();\n            tracks.forEach(track => track.stop());\n          } catch (e) {\n            console.log(e);\n          }\n\n          let blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()]);\n\n          window.localStream = blackSilence();\n          this.localVideoref.current.srcObject = window.localStream;\n          this.getUserMedia();\n        });\n      });\n    };\n\n    this.gotMessageFromServer = (fromId, message) => {\n      var signal = JSON.parse(message);\n\n      if (fromId !== socketId) {\n        if (signal.sdp) {\n          connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\n            if (signal.sdp.type === \"offer\") {\n              connections[fromId].createAnswer().then(description => {\n                connections[fromId].setLocalDescription(description).then(() => {\n                  socket.emit(\"signal\", fromId, JSON.stringify({\n                    sdp: connections[fromId].localDescription\n                  }));\n                }).catch(e => console.log(e));\n              }).catch(e => console.log(e));\n            }\n          }).catch(e => console.log(e));\n        }\n\n        if (signal.ice) {\n          connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e));\n        }\n      }\n    };\n\n    this.changeCssVideos = main => {\n      let widthMain = main.offsetWidth;\n      let minWidth = \"30%\";\n\n      if (widthMain * 30 / 100 < 300) {\n        minWidth = \"300px\";\n      }\n\n      let minHeight = \"40%\";\n      let height = String(100 / elms) + \"%\";\n      let width = \"\";\n\n      if (elms === 0 || elms === 1) {\n        width = \"100%\";\n        height = \"100%\";\n      } else if (elms === 2) {\n        width = \"45%\";\n        height = \"100%\";\n      } else if (elms === 3 || elms === 4) {\n        width = \"35%\";\n        height = \"50%\";\n      } else {\n        width = String(100 / elms) + \"%\";\n      }\n\n      let videos = main.querySelectorAll(\"video\");\n\n      for (let a = 0; a < videos.length; ++a) {\n        videos[a].style.minWidth = minWidth;\n        videos[a].style.minHeight = minHeight;\n        videos[a].style.setProperty(\"width\", width);\n        videos[a].style.setProperty(\"height\", height);\n      }\n\n      return {\n        minWidth,\n        minHeight,\n        width,\n        height\n      };\n    };\n\n    this.connectToSocketServer = () => {\n      socket = io.connect(server_url, {\n        secure: true\n      });\n      socket.on(\"signal\", this.gotMessageFromServer);\n      socket.on(\"connect\", () => {\n        socket.emit(\"join-call\", window.location.href);\n        socketId = socket.id;\n        socket.on(\"chat-message\", this.addMessage);\n        socket.on(\"user-left\", id => {\n          let video = document.querySelector(`[data-socket=\"${id}\"]`);\n\n          if (video !== null) {\n            elms--;\n            video.parentNode.removeChild(video);\n            let main = document.getElementById(\"main\");\n            this.changeCssVideos(main);\n          }\n        });\n        socket.on(\"user-joined\", (id, clients) => {\n          clients.forEach(socketListId => {\n            connections[socketListId] = new RTCPeerConnection(peerConnectionConfig); // Wait for their ice candidate\n\n            connections[socketListId].onicecandidate = function (event) {\n              if (event.candidate != null) {\n                socket.emit(\"signal\", socketListId, JSON.stringify({\n                  ice: event.candidate\n                }));\n              }\n            }; // Wait for their video stream\n\n\n            connections[socketListId].onaddstream = event => {\n              // TODO mute button, full screen button\n              var searchVidep = document.querySelector(`[data-socket=\"${socketListId}\"]`);\n\n              if (searchVidep !== null) {\n                // if i don't do this check it make an empyt square\n                searchVidep.srcObject = event.stream;\n              } else {\n                elms = clients.length;\n                let main = document.getElementById(\"main\");\n                let cssMesure = this.changeCssVideos(main);\n                let video = document.createElement(\"video\");\n                let css = {\n                  minWidth: cssMesure.minWidth,\n                  minHeight: cssMesure.minHeight,\n                  maxHeight: \"100%\",\n                  margin: \"10px\",\n                  borderStyle: \"solid\",\n                  borderColor: \"#bdbdbd\",\n                  objectFit: \"fill\"\n                };\n\n                for (let i in css) video.style[i] = css[i];\n\n                video.style.setProperty(\"width\", cssMesure.width);\n                video.style.setProperty(\"height\", cssMesure.height);\n                video.setAttribute(\"data-socket\", socketListId);\n                video.srcObject = event.stream;\n                video.autoplay = true;\n                video.playsinline = true;\n                main.appendChild(video);\n              }\n            }; // Add the local video stream\n\n\n            if (window.localStream !== undefined && window.localStream !== null) {\n              connections[socketListId].addStream(window.localStream);\n            } else {\n              let blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()]);\n\n              window.localStream = blackSilence();\n              connections[socketListId].addStream(window.localStream);\n            }\n          });\n\n          if (id === socketId) {\n            for (let id2 in connections) {\n              if (id2 === socketId) continue;\n\n              try {\n                connections[id2].addStream(window.localStream);\n              } catch (e) {}\n\n              connections[id2].createOffer().then(description => {\n                connections[id2].setLocalDescription(description).then(() => {\n                  socket.emit(\"signal\", id2, JSON.stringify({\n                    sdp: connections[id2].localDescription\n                  }));\n                }).catch(e => console.log(e));\n              });\n            }\n          }\n        });\n      });\n    };\n\n    this.silence = () => {\n      let ctx = new AudioContext();\n      let oscillator = ctx.createOscillator();\n      let dst = oscillator.connect(ctx.createMediaStreamDestination());\n      oscillator.start();\n      ctx.resume();\n      return Object.assign(dst.stream.getAudioTracks()[0], {\n        enabled: false\n      });\n    };\n\n    this.black = ({\n      width = 640,\n      height = 480\n    } = {}) => {\n      let canvas = Object.assign(document.createElement(\"canvas\"), {\n        width,\n        height\n      });\n      canvas.getContext(\"2d\").fillRect(0, 0, width, height);\n      let stream = canvas.captureStream();\n      return Object.assign(stream.getVideoTracks()[0], {\n        enabled: false\n      });\n    };\n\n    this.handleVideo = () => this.setState({\n      video: !this.state.video\n    }, () => this.getUserMedia());\n\n    this.handleAudio = () => this.setState({\n      audio: !this.state.audio\n    }, () => this.getUserMedia());\n\n    this.handleScreen = () => this.setState({\n      screen: !this.state.screen\n    }, () => this.getDislayMedia());\n\n    this.handleEndCall = () => {\n      try {\n        let tracks = this.localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n        toast.error(\"You leave the Meeting!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      } catch (e) {}\n\n      window.location.href = \"/\";\n    };\n\n    this.openChat = () => this.setState({\n      showModal: true,\n      newmessages: 0\n    });\n\n    this.closeChat = () => this.setState({\n      showModal: false\n    });\n\n    this.handleMessage = e => this.setState({\n      message: e.target.value\n    });\n\n    this.addMessage = (data, sender, socketIdSender) => {\n      this.setState(prevState => ({\n        messages: [...prevState.messages, {\n          sender: sender,\n          data: data\n        }]\n      }));\n\n      if (socketIdSender !== socketId) {\n        this.setState({\n          newmessages: this.state.newmessages + 1\n        });\n      }\n    };\n\n    this.handleUsername = e => this.setState({\n      username: e.target.value\n    });\n\n    this.sendMessage = () => {\n      socket.emit(\"chat-message\", this.state.message, this.state.username);\n      this.setState({\n        message: \"\",\n        sender: this.state.username\n      });\n    };\n\n    this.copyUrl = () => {\n      let text = window.location.href;\n\n      if (!navigator.clipboard) {\n        let textArea = document.createElement(\"textarea\");\n        textArea.value = text;\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n\n        try {\n          document.execCommand(\"copy\");\n          message.success(\"Link copied to clipboard!\");\n        } catch (err) {\n          message.error(\"Failed to copy\");\n        }\n\n        document.body.removeChild(textArea);\n        return;\n      }\n\n      navigator.clipboard.writeText(text).then(function () {\n        message.success(\"Link copied to clipboard!\");\n      }, () => {\n        message.error(\"Failed to copy\");\n      });\n    };\n\n    this.enumerateDevicesFunction = () => {\n      let select1 = document.getElementById(\"select1\");\n      let select3 = document.getElementById(\"select3\");\n      navigator.mediaDevices.enumerateDevices().then(function (devices) {\n        devices.forEach(function (deviceInfo) {\n          var option = document.createElement(\"option\");\n          option.value = deviceInfo.deviceId;\n\n          if (deviceInfo.kind === \"audioinput\") {\n            console.log(deviceInfo.label);\n            option.label = deviceInfo.label;\n            option.value = deviceInfo.deviceId; //  console.log(option.value);\n\n            select1.appendChild(option);\n          } else if (deviceInfo.kind === \"videoinput\") {\n            option.label = deviceInfo.label;\n            option.value = deviceInfo.deviceId; //  console.log(option.value);\n\n            select3.appendChild(option);\n          }\n        });\n      }).catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n    };\n\n    this.connect = () => this.setState({\n      askForUsername: false\n    }, () => this.getMedia());\n\n    this.isChrome = function () {\n      let userAgent = (navigator && (navigator.userAgent || \"\")).toLowerCase();\n      let vendor = (navigator && (navigator.vendor || \"\")).toLowerCase();\n      let matchChrome = /google inc/.test(vendor) ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/) : null; // let matchFirefox = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/)\n      // return matchChrome !== null || matchFirefox !== null\n\n      return matchChrome !== null;\n    };\n\n    this.enumerateDevicesFunction();\n    this.localVideoref = /*#__PURE__*/React.createRef();\n    this.videoAvailable = false;\n    this.audioAvailable = false;\n    this.state = {\n      video: false,\n      audio: false,\n      screen: false,\n      showModal: false,\n      screenAvailable: false,\n      messages: [],\n      message: \"\",\n      newmessages: 0,\n      askForUsername: this.getUsername(),\n      username: \"\"\n    };\n    connections = {};\n    this.getPermissions();\n  } // Obter o Nome de Utilizador\n\n\n  render() {\n    if (this.isChrome() === false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"white\",\n          width: \"30%\",\n          height: \"auto\",\n          padding: \"20px\",\n          minWidth: \"400px\",\n          textAlign: \"center\",\n          margin: \"auto\",\n          marginTop: \"50px\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sorry, this works only with Google Chrome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.askForUsername === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"white\",\n            width: \"30%\",\n            height: \"auto\",\n            padding: \"20px\",\n            minWidth: \"400px\",\n            textAlign: \"center\",\n            margin: \"auto\",\n            marginTop: \"50px\",\n            justifyContent: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0,\n              fontWeight: \"bold\",\n              paddingRight: \"50px\"\n            },\n            children: \"Set your username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Username\",\n            required: true,\n            value: this.state.username,\n            onChange: e => this.handleUsername(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.connect,\n            disabled: !this.state.username,\n            style: {\n              margin: \"20px\"\n            },\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            paddingTop: \"40px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"my-video\",\n            ref: this.localVideoref,\n            autoPlay: true,\n            muted: true,\n            style: {\n              borderStyle: \"solid\",\n              borderColor: \"#bdbdbd\",\n              objectFit: \"fill\",\n              width: \"60%\",\n              height: \"30%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-down\",\n          style: {\n            backgroundColor: \"whitesmoke\",\n            color: \"whitesmoke\",\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              color: \"#424242\"\n            },\n            onClick: this.handleVideo,\n            children: this.state.video === true ? /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(VideocamOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              color: \"#f44336\"\n            },\n            onClick: this.handleEndCall,\n            children: /*#__PURE__*/_jsxDEV(CallEndIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              color: \"#424242\"\n            },\n            onClick: this.handleAudio,\n            children: this.state.audio === true ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 46\n            }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this), this.state.screenAvailable === true ? /*#__PURE__*/_jsxDEV(IconButton, {\n            style: {\n              color: \"#424242\"\n            },\n            onClick: this.handleScreen,\n            children: this.state.screen === true ? /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(StopScreenShareIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: this.state.newmessages,\n            max: 999,\n            color: \"secondary\",\n            onClick: this.openChat,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: \"#424242\"\n              },\n              onClick: this.openChat,\n              children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.showModal,\n          onHide: this.closeChat,\n          style: {\n            zIndex: \"999999\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Chat Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            style: {\n              overflow: \"auto\",\n              overflowY: \"auto\",\n              height: \"400px\",\n              textAlign: \"left\"\n            },\n            children: this.state.messages.length > 0 ? this.state.messages.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"left\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  wordBreak: \"break-all\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: item.sender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 25\n                }, this), \": \", item.data]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No messages yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            className: \"div-send-msg\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Message\",\n              value: this.state.message,\n              onChange: e => this.handleMessage(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: this.sendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingTop: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: window.location.href,\n              disable: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                backgroundColor: \"#3f51b5\",\n                color: \"whitesmoke\",\n                marginLeft: \"20px\",\n                marginTop: \"10px\",\n                width: \"120px\",\n                fontSize: \"10px\"\n              },\n              onClick: this.copyUrl,\n              children: \"Copy invite link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-4 pb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"select1\",\n                children: \"Audio Source: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"select1\",\n                className: \"pr-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"select3\",\n                children: \"Video Source: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"select3\",\n                className: \"pr-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 17\n              }, this), this.enumerateDevicesFunction()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            id: \"main\",\n            className: \"flex-container\",\n            style: {\n              margin: 0,\n              padding: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              id: \"my-video\",\n              ref: this.localVideoref,\n              autoPlay: true,\n              muted: true,\n              style: {\n                borderStyle: \"solid\",\n                borderColor: \"#bdbdbd\",\n                margin: \"10px\",\n                objectFit: \"fill\",\n                width: \"100%\",\n                height: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Room;","map":{"version":3,"sources":["/Users/user/GitHub/remotesports/client/src/pages/Room.js"],"names":["React","Component","io","toast","auth","db","IconButton","Badge","Input","Button","VideocamIcon","VideocamOffIcon","MicIcon","MicOffIcon","ScreenShareIcon","StopScreenShareIcon","CallEndIcon","ChatIcon","message","Row","Modal","server_url","connections","peerConnectionConfig","iceServers","urls","socket","socketId","elms","Room","constructor","props","getUsername","currentUser","collection","doc","uid","get","then","exists","setState","username","data","name","catch","error","console","log","getPermissions","navigator","mediaDevices","getUserMedia","video","videoAvailable","audio","audioAvailable","getDisplayMedia","screenAvailable","stream","window","localStream","localVideoref","current","srcObject","e","getMedia","connectToSocketServer","state","getUserMediaSuccess","tracks","getTracks","forEach","track","stop","id","addStream","createOffer","description","setLocalDescription","emit","JSON","stringify","sdp","localDescription","onended","blackSilence","args","MediaStream","black","silence","getDislayMedia","screen","getDislayMediaSuccess","gotMessageFromServer","fromId","signal","parse","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","changeCssVideos","main","widthMain","offsetWidth","minWidth","minHeight","height","String","width","videos","querySelectorAll","a","length","style","setProperty","connect","secure","on","location","href","addMessage","document","querySelector","parentNode","removeChild","getElementById","clients","socketListId","RTCPeerConnection","onicecandidate","event","candidate","onaddstream","searchVidep","cssMesure","createElement","css","maxHeight","margin","borderStyle","borderColor","objectFit","i","setAttribute","autoplay","playsinline","appendChild","undefined","id2","ctx","AudioContext","oscillator","createOscillator","dst","createMediaStreamDestination","start","resume","Object","assign","getAudioTracks","enabled","canvas","getContext","fillRect","captureStream","getVideoTracks","handleVideo","handleAudio","handleScreen","handleEndCall","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","openChat","showModal","newmessages","closeChat","handleMessage","target","value","sender","socketIdSender","prevState","messages","handleUsername","sendMessage","copyUrl","text","clipboard","textArea","body","focus","select","execCommand","success","err","writeText","enumerateDevicesFunction","select1","select3","enumerateDevices","devices","deviceInfo","option","deviceId","kind","label","askForUsername","isChrome","userAgent","toLowerCase","vendor","matchChrome","test","match","createRef","render","background","padding","textAlign","marginTop","justifyContent","fontWeight","paddingRight","paddingTop","backgroundColor","color","zIndex","overflow","overflowY","map","item","index","wordBreak","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { toast } from \"react-toastify\";\n\nimport { auth, db } from \"../firebase\";\n\nimport { IconButton, Badge, Input, Button } from \"@material-ui/core\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport ScreenShareIcon from \"@material-ui/icons/ScreenShare\";\nimport StopScreenShareIcon from \"@material-ui/icons/StopScreenShare\";\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\nimport { message } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nimport { Row } from \"reactstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"../css/Room.css\";\n\nconst server_url = \"http://localhost:8000\";\n\nvar connections = {};\nconst peerConnectionConfig = {\n  iceServers: [\n    // { 'urls': 'stun:stun.services.mozilla.com' },\n    { urls: \"stun:stun.l.google.com:19302\" },\n  ],\n};\nvar socket = null;\nvar socketId = null;\nvar elms = 0;\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n\n    this.enumerateDevicesFunction();\n\n    this.localVideoref = React.createRef();\n\n    this.videoAvailable = false;\n    this.audioAvailable = false;\n\n    this.state = {\n      video: false,\n      audio: false,\n      screen: false,\n      showModal: false,\n      screenAvailable: false,\n      messages: [],\n      message: \"\",\n      newmessages: 0,\n      askForUsername: this.getUsername(),\n      username: \"\",\n    };\n    connections = {};\n\n    this.getPermissions();\n  }\n\n  // Obter o Nome de Utilizador\n  getUsername = () => {\n    if (auth.currentUser) {\n      db.collection(\"users\")\n        .doc(auth.currentUser.uid)\n        .get()\n        .then(function (doc) {\n          if (doc.exists) {\n            this.setState({ username: doc.data().name });\n            return false;\n          }\n        })\n        .catch(function (error) {\n          console.log(error.message)\n        });\n    } else {\n      return true;\n    }\n  };\n\n  getPermissions = async () => {\n    try {\n      await navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then(() => (this.videoAvailable = true))\n        .catch(() => (this.videoAvailable = false));\n\n      await navigator.mediaDevices\n        .getUserMedia({ audio: true })\n        .then(() => (this.audioAvailable = true))\n        .catch(() => (this.audioAvailable = false));\n\n      if (navigator.mediaDevices.getDisplayMedia) {\n        this.setState({ screenAvailable: true });\n      } else {\n        this.setState({ screenAvailable: false });\n      }\n\n      if (this.videoAvailable || this.audioAvailable) {\n        navigator.mediaDevices\n          .getUserMedia({\n            video: this.videoAvailable,\n            audio: this.audioAvailable,\n          })\n          .then((stream) => {\n            window.localStream = stream;\n            this.localVideoref.current.srcObject = stream;\n          })\n          .then((stream) => {})\n          .catch((e) => console.log(e));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  getMedia = () => {\n    // Primeira função a ser lida\n    // Tentamos ir buscar o video e audio do utilizador\n    this.setState(\n      {\n        video: this.videoAvailable,\n        audio: this.audioAvailable,\n      },\n      () => {\n        this.getUserMedia(); //atribuir media ao utilizador\n        this.connectToSocketServer(); // conecção a sala\n      }\n    );\n  };\n\n  getUserMedia = () => {\n    if (\n      (this.state.video && this.videoAvailable) ||\n      (this.state.audio && this.audioAvailable)\n    ) {\n      // se conseguirmos atribuir a media e audio ao utilizador\n      navigator.mediaDevices\n        .getUserMedia({ video: this.state.video, audio: this.state.audio })\n        .then(this.getUserMediaSuccess)\n        .then((stream) => {})\n        .catch((e) => console.log(e));\n    } else {\n      try {\n        let tracks = this.localVideoref.current.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n      } catch (e) {}\n    }\n  };\n\n  getUserMediaSuccess = (stream) => {\n    try {\n      window.localStream.getTracks().forEach((track) => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n\n    window.localStream = stream;\n    this.localVideoref.current.srcObject = stream;\n\n    for (let id in connections) {\n      if (id === socketId) continue;\n\n      connections[id].addStream(window.localStream);\n\n      connections[id].createOffer().then((description) => {\n        connections[id]\n          .setLocalDescription(description)\n          .then(() => {\n            socket.emit(\n              \"signal\",\n              id,\n              JSON.stringify({ sdp: connections[id].localDescription })\n            );\n          })\n          .catch((e) => console.log(e));\n      });\n    }\n\n    stream.getTracks().forEach(\n      (track) =>\n        (track.onended = () => {\n          this.setState(\n            {\n              video: false,\n              audio: false,\n            },\n            () => {\n              try {\n                let tracks = this.localVideoref.current.srcObject.getTracks();\n                tracks.forEach((track) => track.stop());\n              } catch (e) {\n                console.log(e);\n              }\n\n              let blackSilence = (...args) =>\n                new MediaStream([this.black(...args), this.silence()]);\n              window.localStream = blackSilence();\n              this.localVideoref.current.srcObject = window.localStream;\n\n              for (let id in connections) {\n                connections[id].addStream(window.localStream);\n\n                connections[id].createOffer().then((description) => {\n                  connections[id]\n                    .setLocalDescription(description)\n                    .then(() => {\n                      socket.emit(\n                        \"signal\",\n                        id,\n                        JSON.stringify({\n                          sdp: connections[id].localDescription,\n                        })\n                      );\n                    })\n                    .catch((e) => console.log(e));\n                });\n              }\n            }\n          );\n        })\n    );\n  };\n\n  getDislayMedia = () => {\n    //media a ser \"displayed\" do utilizador\n    if (this.state.screen) {\n      if (navigator.mediaDevices.getDisplayMedia) {\n        navigator.mediaDevices\n          .getDisplayMedia({ video: true, audio: true })\n          .then(this.getDislayMediaSuccess)\n          .then((stream) => {})\n          .catch((e) => console.log(e));\n      }\n    }\n  };\n\n  getDislayMediaSuccess = (stream) => {\n    try {\n      window.localStream.getTracks().forEach((track) => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n\n    window.localStream = stream;\n    this.localVideoref.current.srcObject = stream;\n\n    for (let id in connections) {\n      if (id === socketId) continue;\n\n      connections[id].addStream(window.localStream); //adicionar a stream do utilizador\n\n      connections[id].createOffer().then((description) => {\n        connections[id]\n          .setLocalDescription(description)\n          .then(() => {\n            socket.emit(\n              \"signal\",\n              id,\n              JSON.stringify({ sdp: connections[id].localDescription })\n            );\n          })\n          .catch((e) => console.log(e));\n      });\n    }\n\n    stream.getTracks().forEach(\n      (track) =>\n        (track.onended = () => {\n          this.setState(\n            {\n              screen: false,\n            },\n            () => {\n              try {\n                let tracks = this.localVideoref.current.srcObject.getTracks();\n                tracks.forEach((track) => track.stop());\n              } catch (e) {\n                console.log(e);\n              }\n\n              let blackSilence = (...args) =>\n                new MediaStream([this.black(...args), this.silence()]);\n              window.localStream = blackSilence();\n              this.localVideoref.current.srcObject = window.localStream;\n\n              this.getUserMedia();\n            }\n          );\n        })\n    );\n  };\n\n  gotMessageFromServer = (fromId, message) => {\n    var signal = JSON.parse(message);\n\n    if (fromId !== socketId) {\n      if (signal.sdp) {\n        connections[fromId]\n          .setRemoteDescription(new RTCSessionDescription(signal.sdp))\n          .then(() => {\n            if (signal.sdp.type === \"offer\") {\n              connections[fromId]\n                .createAnswer()\n                .then((description) => {\n                  connections[fromId]\n                    .setLocalDescription(description)\n                    .then(() => {\n                      socket.emit(\n                        \"signal\",\n                        fromId,\n                        JSON.stringify({\n                          sdp: connections[fromId].localDescription,\n                        })\n                      );\n                    })\n                    .catch((e) => console.log(e));\n                })\n                .catch((e) => console.log(e));\n            }\n          })\n          .catch((e) => console.log(e));\n      }\n\n      if (signal.ice) {\n        connections[fromId]\n          .addIceCandidate(new RTCIceCandidate(signal.ice))\n          .catch((e) => console.log(e));\n      }\n    }\n  };\n\n  changeCssVideos = (main) => {\n    let widthMain = main.offsetWidth;\n    let minWidth = \"30%\";\n    if ((widthMain * 30) / 100 < 300) {\n      minWidth = \"300px\";\n    }\n    let minHeight = \"40%\";\n\n    let height = String(100 / elms) + \"%\";\n    let width = \"\";\n    if (elms === 0 || elms === 1) {\n      width = \"100%\";\n      height = \"100%\";\n    } else if (elms === 2) {\n      width = \"45%\";\n      height = \"100%\";\n    } else if (elms === 3 || elms === 4) {\n      width = \"35%\";\n      height = \"50%\";\n    } else {\n      width = String(100 / elms) + \"%\";\n    }\n\n    let videos = main.querySelectorAll(\"video\");\n    for (let a = 0; a < videos.length; ++a) {\n      videos[a].style.minWidth = minWidth;\n      videos[a].style.minHeight = minHeight;\n      videos[a].style.setProperty(\"width\", width);\n      videos[a].style.setProperty(\"height\", height);\n    }\n\n    return { minWidth, minHeight, width, height };\n  };\n\n  connectToSocketServer = () => {\n    socket = io.connect(server_url, { secure: true });\n\n    socket.on(\"signal\", this.gotMessageFromServer);\n\n    socket.on(\"connect\", () => {\n      socket.emit(\"join-call\", window.location.href);\n      socketId = socket.id;\n\n      socket.on(\"chat-message\", this.addMessage);\n\n      socket.on(\"user-left\", (id) => {\n        let video = document.querySelector(`[data-socket=\"${id}\"]`);\n        if (video !== null) {\n          elms--;\n          video.parentNode.removeChild(video);\n\n          let main = document.getElementById(\"main\");\n          this.changeCssVideos(main);\n        }\n      });\n\n      socket.on(\"user-joined\", (id, clients) => {\n        clients.forEach((socketListId) => {\n          connections[socketListId] = new RTCPeerConnection(\n            peerConnectionConfig\n          );\n          // Wait for their ice candidate\n          connections[socketListId].onicecandidate = function (event) {\n            if (event.candidate != null) {\n              socket.emit(\n                \"signal\",\n                socketListId,\n                JSON.stringify({ ice: event.candidate })\n              );\n            }\n          };\n\n          // Wait for their video stream\n          connections[socketListId].onaddstream = (event) => {\n            // TODO mute button, full screen button\n            var searchVidep = document.querySelector(\n              `[data-socket=\"${socketListId}\"]`\n            );\n            if (searchVidep !== null) {\n              // if i don't do this check it make an empyt square\n              searchVidep.srcObject = event.stream;\n            } else {\n              elms = clients.length;\n              let main = document.getElementById(\"main\");\n              let cssMesure = this.changeCssVideos(main);\n\n              let video = document.createElement(\"video\");\n\n              let css = {\n                minWidth: cssMesure.minWidth,\n                minHeight: cssMesure.minHeight,\n                maxHeight: \"100%\",\n                margin: \"10px\",\n                borderStyle: \"solid\",\n                borderColor: \"#bdbdbd\",\n                objectFit: \"fill\",\n              };\n              for (let i in css) video.style[i] = css[i];\n\n              video.style.setProperty(\"width\", cssMesure.width);\n              video.style.setProperty(\"height\", cssMesure.height);\n              video.setAttribute(\"data-socket\", socketListId);\n              video.srcObject = event.stream;\n              video.autoplay = true;\n              video.playsinline = true;\n\n              main.appendChild(video);\n            }\n          };\n\n          // Add the local video stream\n          if (window.localStream !== undefined && window.localStream !== null) {\n            connections[socketListId].addStream(window.localStream);\n          } else {\n            let blackSilence = (...args) =>\n              new MediaStream([this.black(...args), this.silence()]);\n            window.localStream = blackSilence();\n            connections[socketListId].addStream(window.localStream);\n          }\n        });\n\n        if (id === socketId) {\n          for (let id2 in connections) {\n            if (id2 === socketId) continue;\n\n            try {\n              connections[id2].addStream(window.localStream);\n            } catch (e) {}\n\n            connections[id2].createOffer().then((description) => {\n              connections[id2]\n                .setLocalDescription(description)\n                .then(() => {\n                  socket.emit(\n                    \"signal\",\n                    id2,\n                    JSON.stringify({ sdp: connections[id2].localDescription })\n                  );\n                })\n                .catch((e) => console.log(e));\n            });\n          }\n        }\n      });\n    });\n  };\n\n  silence = () => {\n    let ctx = new AudioContext();\n    let oscillator = ctx.createOscillator();\n    let dst = oscillator.connect(ctx.createMediaStreamDestination());\n    oscillator.start();\n    ctx.resume();\n    return Object.assign(dst.stream.getAudioTracks()[0], { enabled: false });\n  };\n  black = ({ width = 640, height = 480 } = {}) => {\n    let canvas = Object.assign(document.createElement(\"canvas\"), {\n      width,\n      height,\n    });\n    canvas.getContext(\"2d\").fillRect(0, 0, width, height);\n    let stream = canvas.captureStream();\n    return Object.assign(stream.getVideoTracks()[0], { enabled: false });\n  };\n\n  handleVideo = () =>\n    this.setState({ video: !this.state.video }, () => this.getUserMedia());\n  handleAudio = () =>\n    this.setState({ audio: !this.state.audio }, () => this.getUserMedia());\n  handleScreen = () =>\n    this.setState({ screen: !this.state.screen }, () => this.getDislayMedia());\n\n  handleEndCall = () => {\n    try {\n      let tracks = this.localVideoref.current.srcObject.getTracks();\n      tracks.forEach((track) => track.stop());\n      toast.error(\"You leave the Meeting!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (e) {}\n    window.location.href = \"/\";\n  };\n\n  openChat = () => this.setState({ showModal: true, newmessages: 0 });\n  closeChat = () => this.setState({ showModal: false });\n  handleMessage = (e) => this.setState({ message: e.target.value });\n\n  addMessage = (data, sender, socketIdSender) => {\n    this.setState((prevState) => ({\n      messages: [...prevState.messages, { sender: sender, data: data }],\n    }));\n    if (socketIdSender !== socketId) {\n      this.setState({ newmessages: this.state.newmessages + 1 });\n    }\n  };\n\n  handleUsername = (e) => this.setState({ username: e.target.value });\n\n  sendMessage = () => {\n    socket.emit(\"chat-message\", this.state.message, this.state.username);\n    this.setState({ message: \"\", sender: this.state.username });\n  };\n\n  copyUrl = () => {\n    let text = window.location.href;\n    if (!navigator.clipboard) {\n      let textArea = document.createElement(\"textarea\");\n      textArea.value = text;\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      try {\n        document.execCommand(\"copy\");\n        message.success(\"Link copied to clipboard!\");\n      } catch (err) {\n        message.error(\"Failed to copy\");\n      }\n      document.body.removeChild(textArea);\n      return;\n    }\n    navigator.clipboard.writeText(text).then(\n      function () {\n        message.success(\"Link copied to clipboard!\");\n      },\n      () => {\n        message.error(\"Failed to copy\");\n      }\n    );\n  };\n\n  enumerateDevicesFunction = () => {\n    let select1 = document.getElementById(\"select1\");\n    let select3 = document.getElementById(\"select3\");\n\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then(function (devices) {\n        devices.forEach(function (deviceInfo) {\n          var option = document.createElement(\"option\");\n          option.value = deviceInfo.deviceId;\n\n          if (deviceInfo.kind === \"audioinput\") {\n            console.log(deviceInfo.label);\n            option.label = deviceInfo.label;\n            option.value = deviceInfo.deviceId;\n\n            //  console.log(option.value);\n            \n            select1.appendChild(option);\n          } else if (deviceInfo.kind === \"videoinput\") {\n            option.label = deviceInfo.label;\n            option.value = deviceInfo.deviceId;\n            \n            //  console.log(option.value);\n           \n            select3.appendChild(option);\n          }\n        });\n      })\n      .catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n  };\n\n  connect = () =>\n    this.setState({ askForUsername: false }, () => this.getMedia());\n\n  isChrome = function () {\n    let userAgent = (navigator && (navigator.userAgent || \"\")).toLowerCase();\n    let vendor = (navigator && (navigator.vendor || \"\")).toLowerCase();\n    let matchChrome = /google inc/.test(vendor)\n      ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/)\n      : null;\n    // let matchFirefox = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/)\n    // return matchChrome !== null || matchFirefox !== null\n    return matchChrome !== null;\n  };\n\n  render() {\n    if (this.isChrome() === false) {\n      return (\n        <div\n          style={{\n            background: \"white\",\n            width: \"30%\",\n            height: \"auto\",\n            padding: \"20px\",\n            minWidth: \"400px\",\n            textAlign: \"center\",\n            margin: \"auto\",\n            marginTop: \"50px\",\n            justifyContent: \"center\",\n          }}\n        >\n          <h1>Sorry, this works only with Google Chrome</h1>\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.askForUsername === true ? (\n          <div>\n            <div\n              style={{\n                background: \"white\",\n                width: \"30%\",\n                height: \"auto\",\n                padding: \"20px\",\n                minWidth: \"400px\",\n                textAlign: \"center\",\n                margin: \"auto\",\n                marginTop: \"50px\",\n                justifyContent: \"center\",\n              }}\n            >\n              <p\n                style={{ margin: 0, fontWeight: \"bold\", paddingRight: \"50px\" }}\n              >\n                Set your username\n              </p>\n              <Input\n                placeholder=\"Username\"\n                required\n                value={this.state.username}\n                onChange={(e) => this.handleUsername(e)}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.connect}\n                disabled={!this.state.username}\n                style={{ margin: \"20px\" }}\n              >\n                Connect\n              </Button>\n            </div>\n            <div\n              style={{\n                justifyContent: \"center\",\n                textAlign: \"center\",\n                paddingTop: \"40px\",\n              }}\n            >\n              <video\n                id=\"my-video\"\n                ref={this.localVideoref}\n                autoPlay\n                muted\n                style={{\n                  borderStyle: \"solid\",\n                  borderColor: \"#bdbdbd\",\n                  objectFit: \"fill\",\n                  width: \"60%\",\n                  height: \"30%\",\n                }}\n              ></video>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div\n              className=\"btn-down\"\n              style={{\n                backgroundColor: \"whitesmoke\",\n                color: \"whitesmoke\",\n                textAlign: \"center\",\n              }}\n            >\n              <IconButton\n                style={{ color: \"#424242\" }}\n                onClick={this.handleVideo}\n              >\n                {this.state.video === true ? (\n                  <VideocamIcon />\n                ) : (\n                  <VideocamOffIcon />\n                )}\n              </IconButton>\n\n              <IconButton\n                style={{ color: \"#f44336\" }}\n                onClick={this.handleEndCall}\n              >\n                <CallEndIcon />\n              </IconButton>\n\n              <IconButton\n                style={{ color: \"#424242\" }}\n                onClick={this.handleAudio}\n              >\n                {this.state.audio === true ? <MicIcon /> : <MicOffIcon />}\n              </IconButton>\n\n              {this.state.screenAvailable === true ? (\n                <IconButton\n                  style={{ color: \"#424242\" }}\n                  onClick={this.handleScreen}\n                >\n                  {this.state.screen === true ? (\n                    <ScreenShareIcon />\n                  ) : (\n                    <StopScreenShareIcon />\n                  )}\n                </IconButton>\n              ) : null}\n\n              <Badge\n                badgeContent={this.state.newmessages}\n                max={999}\n                color=\"secondary\"\n                onClick={this.openChat}\n              >\n                <IconButton\n                  style={{ color: \"#424242\" }}\n                  onClick={this.openChat}\n                >\n                  <ChatIcon />\n                </IconButton>\n              </Badge>\n            </div>\n\n            <Modal\n              show={this.state.showModal}\n              onHide={this.closeChat}\n              style={{ zIndex: \"999999\" }}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>Chat Room</Modal.Title>\n              </Modal.Header>\n              <Modal.Body\n                style={{\n                  overflow: \"auto\",\n                  overflowY: \"auto\",\n                  height: \"400px\",\n                  textAlign: \"left\",\n                }}\n              >\n                {this.state.messages.length > 0 ? (\n                  this.state.messages.map((item, index) => (\n                    <div key={index} style={{ textAlign: \"left\" }}>\n                      <p style={{ wordBreak: \"break-all\" }}>\n                        <b>{item.sender}</b>: {item.data}\n                      </p>\n                    </div>\n                  ))\n                ) : (\n                  <p>No messages yet</p>\n                )}\n              </Modal.Body>\n              <Modal.Footer className=\"div-send-msg\">\n                <Input\n                  placeholder=\"Message\"\n                  value={this.state.message}\n                  onChange={(e) => this.handleMessage(e)}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={this.sendMessage}\n                >\n                  Send\n                </Button>\n              </Modal.Footer>\n            </Modal>\n\n            <div className=\"container\">\n              <div style={{ paddingTop: \"20px\" }}>\n                <Input value={window.location.href} disable=\"true\"></Input>\n                <Button\n                  style={{\n                    backgroundColor: \"#3f51b5\",\n                    color: \"whitesmoke\",\n                    marginLeft: \"20px\",\n                    marginTop: \"10px\",\n                    width: \"120px\",\n                    fontSize: \"10px\",\n                  }}\n                  onClick={this.copyUrl}\n                >\n                  Copy invite link\n                </Button>{\" \"}\n                <br />\n              </div>\n\n              <div className=\"pt-4 pb-4\">\n              <div>\n                <label for=\"select1\">Audio Source: </label>\n                <select id=\"select1\" className=\"pr-3\">\n                </select>\n              </div>\n              <div>\n                <label for=\"select3\">Video Source: </label>\n                <select id=\"select3\" className=\"pr-3\">\n                </select>\n                {this.enumerateDevicesFunction()}\n              </div>\n              </div>\n\n              <Row\n                id=\"main\"\n                className=\"flex-container\"\n                style={{ margin: 0, padding: 0 }}\n              >\n                <video\n                  id=\"my-video\"\n                  ref={this.localVideoref}\n                  autoPlay\n                  muted\n                  style={{\n                    borderStyle: \"solid\",\n                    borderColor: \"#bdbdbd\",\n                    margin: \"10px\",\n                    objectFit: \"fill\",\n                    width: \"100%\",\n                    height: \"100%\",\n                  }}\n                ></video>\n              </Row>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}