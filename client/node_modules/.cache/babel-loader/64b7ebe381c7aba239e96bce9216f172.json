{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/GitHub/remotesports/client/src/components/Calendar/AddToGoogleCalendar.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction Calendar({\n  data\n}) {\n  const dataEvent = data;\n  var gapi = window.gapi;\n  var CLIENT_ID = \"402561691552-cgtpd53g0p31gt036hpufikki5dg9fth.apps.googleusercontent.com\";\n  var API_KEY = \"AIzaSyAU52lxFjeTl9nncyf8ncaf7gzYKN6SWdw\";\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n\n  const handleClick = () => {\n    gapi.load(\"client:auth2\", () => {\n      console.log(\"loaded client\");\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      gapi.client.load(\"calendar\", \"v3\", () => console.log(\"bam!\"));\n      gapi.auth2.getAuthInstance().signIn().then(() => {\n        var event = {\n          summary: data.title,\n          location: data.location,\n          description: data.description,\n          start: {\n            dateTime: new Date(data.startTime).toISOString(),\n            timeZone: \"Europe/Lisbon\"\n          },\n          end: {\n            dateTime: new Date(data.endTime).toISOString(),\n            timeZone: \"Europe/Lisbon\"\n          },\n          // recurrence: [\"RRULE:FREQ=DAILY;COUNT=2\"],\n          attendees: [{\n            email: \"helderpimentaxc@gmail.com\"\n          }, {\n            email: \"joao.m.f.l452@gmail.com\"\n          }],\n          reminders: {\n            useDefault: false,\n            overrides: [{\n              method: \"email\",\n              minutes: 24 * 60\n            }, {\n              method: \"popup\",\n              minutes: 10\n            }]\n          }\n        };\n        var request = gapi.client.calendar.events.insert({\n          calendarId: \"primary\",\n          resource: event\n        });\n        request.execute(event => {\n          console.log(event);\n          window.open(event.htmlLink);\n        });\n        /*\n          Uncomment the following block to get events\n        */\n\n        /*\n        // get events\n        gapi.client.calendar.events.list({\n        'calendarId': 'primary',\n        'timeMin': (new Date()).toISOString(),\n        'showDeleted': false,\n        'singleEvents': true,\n        'maxResults': 10,\n        'orderBy': 'startTime'\n        }).then(response => {\n        const events = response.result.items\n        console.log('EVENTS: ', events)\n        })\n        */\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleClick,\n    children: \"Export to Google Calendar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/user/GitHub/remotesports/client/src/components/Calendar/AddToGoogleCalendar.js"],"names":["React","Component","Button","Calendar","data","dataEvent","gapi","window","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","handleClick","load","console","log","client","init","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","signIn","then","event","summary","title","location","description","start","dateTime","Date","startTime","toISOString","timeZone","end","endTime","attendees","email","reminders","useDefault","overrides","method","minutes","request","calendar","events","insert","calendarId","resource","execute","open","htmlLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction Calendar({ data }) {\n  const dataEvent = data;\n\n  \n  var gapi = window.gapi;\n\n  var CLIENT_ID =\n    \"402561691552-cgtpd53g0p31gt036hpufikki5dg9fth.apps.googleusercontent.com\";\n  var API_KEY = \"AIzaSyAU52lxFjeTl9nncyf8ncaf7gzYKN6SWdw\";\n  var DISCOVERY_DOCS = [\n    \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n  ];\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n\n  const handleClick = () => {\n    gapi.load(\"client:auth2\", () => {\n      console.log(\"loaded client\");\n\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      });\n\n      gapi.client.load(\"calendar\", \"v3\", () => console.log(\"bam!\"));\n\n      gapi.auth2\n        .getAuthInstance()\n        .signIn()\n        .then(() => {\n          var event = {\n            summary: data.title,\n            location: data.location,\n            description: data.description,\n            start: {\n              dateTime: new Date(data.startTime).toISOString(),\n              timeZone: \"Europe/Lisbon\",\n            },\n            end: {\n              dateTime: new Date(data.endTime).toISOString(),\n              timeZone: \"Europe/Lisbon\",\n            },\n             // recurrence: [\"RRULE:FREQ=DAILY;COUNT=2\"],\n            attendees: [\n              { email: \"helderpimentaxc@gmail.com\" },\n              { email: \"joao.m.f.l452@gmail.com\" },\n            ],\n            reminders: {\n              useDefault: false,\n              overrides: [\n                { method: \"email\", minutes: 24 * 60 },\n                { method: \"popup\", minutes: 10 },\n              ],\n            },\n          };\n\n          var request = gapi.client.calendar.events.insert({\n            calendarId: \"primary\",\n            resource: event,\n          });\n\n          request.execute((event) => {\n            console.log(event);\n            window.open(event.htmlLink);\n          });\n\n          /*\n            Uncomment the following block to get events\n        */\n          /*\n        // get events\n        gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': (new Date()).toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items\n          console.log('EVENTS: ', events)\n        })\n        */\n        });\n    });\n  };\n\n  return (\n    <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\n      Export to Google Calendar\n    </Button>\n  );\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}