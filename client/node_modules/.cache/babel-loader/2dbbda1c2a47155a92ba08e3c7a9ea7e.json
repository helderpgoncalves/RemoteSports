{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/GitHub/remotesports/client/src/pages/Room.js\";\nimport React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { toast } from \"react-toastify\";\nimport { auth, db } from \"../firebase\";\nimport { IconButton, Badge, Input, Button } from \"@material-ui/core\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport ScreenShareIcon from \"@material-ui/icons/ScreenShare\";\nimport StopScreenShareIcon from \"@material-ui/icons/StopScreenShare\";\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { message } from \"antd\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport \"antd/dist/antd.css\";\nimport { Row } from \"reactstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../css/Room.css\";\nimport BlurOnIcon from \"@material-ui/icons/BlurOn\";\nimport BlurOffIcon from \"@material-ui/icons/BlurOff\";\nimport handpose from \"@tensorflow-models/handpose\";\nimport * as tf from \"@tensorflow/tfjs\"; // mimeType - The mimeType read-only property returns the MIME\n// media type that was specified when creating the\n// MediaRecorder object,\n\nconst videoType = \"video/webm;codecs=vp8\";\nconst server_url = process.env.NODE_ENV === \"production\" ? \"https://remotesports.herokuapp.com/\" : \"http://localhost:5000\";\nvar connections = {};\nconst peerConnectionConfig = {\n  iceServers: [{\n    urls: \"stun:stun.l.google.com:19302\"\n  }]\n};\nvar socket = io(server_url);\nvar socketId = null;\nvar elms = 0;\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n\n    this.runHandpose = async () => {\n      const net = await handpose.load();\n      console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n      setInterval(() => {\n        detect(net);\n      }, 100);\n    };\n\n    this.detect = async net => {\n      // Check data is available\n      if (typeof this.localVideoref.current !== \"undefined\" && this.localVideoref.current !== null && this.localVideoref.current.video.readyState === 4) {\n        // Get Video Properties\n        const video = this.localVideoref.current.video;\n        const videoWidth = this.localVideoref.current.video.videoWidth;\n        const videoHeight = this.localVideoref.current.video.videoHeight; // Set video width\n\n        this.localVideoref.current.video.width = videoWidth;\n        this.localVideoref.current.video.height = videoHeight; // Set canvas height and width\n\n        canvasRef.current.width = videoWidth;\n        canvasRef.current.height = videoHeight; // Make Detections\n\n        const hand = await net.estimateHands(video);\n        console.log(hand); // Draw mesh\n\n        const ctx = canvasRef.current.getContext(\"2d\");\n        drawHand(hand, ctx);\n      }\n    };\n\n    this.getPermissions = async () => {\n      try {\n        await navigator.mediaDevices.getUserMedia({\n          video: true\n        }).then(() => this.videoAvailable = true).catch(() => this.videoAvailable = false);\n        await navigator.mediaDevices.getUserMedia({\n          audio: true\n        }).then(() => this.audioAvailable = true).catch(() => this.audioAvailable = false);\n\n        if (navigator.mediaDevices.getDisplayMedia) {\n          this.setState({\n            screenAvailable: true\n          });\n        } else {\n          this.setState({\n            screenAvailable: false\n          });\n        }\n\n        if (this.videoAvailable || this.audioAvailable) {\n          navigator.mediaDevices.getUserMedia({\n            video: this.videoAvailable,\n            audio: this.audioAvailable\n          }).then(stream => {\n            window.localStream = stream;\n            this.localVideoref.current.srcObject = stream;\n          }).then(stream => {}).catch(e => console.log(e));\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getMedia = () => {\n      // Primeira função a ser lida\n      // Tentamos ir buscar o video e audio do utilizador\n      this.setState({\n        video: this.videoAvailable,\n        audio: this.audioAvailable\n      }, () => {\n        this.getUserMedia(); //atribuir media ao utilizador\n\n        this.connectToSocketServer(); // conecção a sala\n      });\n    };\n\n    this.getUserMedia = () => {\n      if (this.state.video && this.videoAvailable || this.state.audio && this.audioAvailable) {\n        // se conseguirmos atribuir a media e audio ao utilizador\n        navigator.mediaDevices.getUserMedia({\n          video: this.state.video,\n          audio: this.state.audio\n        }).then(this.getUserMediaSuccess).then(stream => {}).catch(e => console.log(e));\n      } else {\n        try {\n          let tracks = this.localVideoref.current.srcObject.getTracks();\n          tracks.forEach(track => track.stop());\n        } catch (e) {}\n      }\n    };\n\n    this.getUserMediaSuccess = stream => {\n      try {\n        window.localStream.getTracks().forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n      this.mediaRecorder = new MediaRecorder(stream, {\n        mimeType: videoType\n      }); // init data storage for video chunks\n\n      this.chunks = []; // listen for data from media recorder\n\n      this.mediaRecorder.ondataavailable = e => {\n        if (e.data && e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      };\n\n      for (let id in connections) {\n        if (id === socketId) continue;\n        connections[id].addStream(window.localStream);\n        connections[id].createOffer().then(description => {\n          connections[id].setLocalDescription(description).then(() => {\n            socket.emit(\"signal\", id, JSON.stringify({\n              sdp: connections[id].localDescription\n            }));\n          }).catch(e => console.log(e));\n        });\n      }\n\n      stream.getTracks().forEach(track => track.onended = () => {\n        this.setState({\n          video: false,\n          audio: false\n        }, () => {\n          try {\n            let tracks = this.localVideoref.current.srcObject.getTracks();\n            tracks.forEach(track => track.stop());\n          } catch (e) {\n            console.log(e);\n          }\n\n          let blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()]);\n\n          window.localStream = blackSilence();\n          this.localVideoref.current.srcObject = window.localStream;\n\n          for (let id in connections) {\n            connections[id].addStream(window.localStream);\n            connections[id].createOffer().then(description => {\n              connections[id].setLocalDescription(description).then(() => {\n                socket.emit(\"signal\", id, JSON.stringify({\n                  sdp: connections[id].localDescription\n                }));\n              }).catch(e => console.log(e));\n            });\n          }\n        });\n      });\n    };\n\n    this.getDislayMedia = () => {\n      //media a ser \"displayed\" do utilizador\n      if (this.state.screen) {\n        if (navigator.mediaDevices.getDisplayMedia) {\n          navigator.mediaDevices.getDisplayMedia({\n            video: true,\n            audio: true\n          }).then(this.getDislayMediaSuccess).then(stream => {}).catch(e => console.log(e));\n        }\n      }\n    };\n\n    this.getDislayMediaSuccess = stream => {\n      try {\n        window.localStream.getTracks().forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n\n      for (let id in connections) {\n        if (id === socketId) continue;\n        connections[id].addStream(window.localStream); //adicionar a stream do utilizador\n\n        connections[id].createOffer().then(description => {\n          connections[id].setLocalDescription(description).then(() => {\n            socket.emit(\"signal\", id, JSON.stringify({\n              sdp: connections[id].localDescription\n            }));\n          }).catch(e => console.log(e));\n        });\n      }\n\n      stream.getTracks().forEach(track => track.onended = () => {\n        this.setState({\n          screen: false\n        }, () => {\n          try {\n            let tracks = this.localVideoref.current.srcObject.getTracks();\n            tracks.forEach(track => track.stop());\n          } catch (e) {\n            console.log(e);\n          }\n\n          let blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()]);\n\n          window.localStream = blackSilence();\n          this.localVideoref.current.srcObject = window.localStream;\n          this.getUserMedia();\n        });\n      });\n    };\n\n    this.gotMessageFromServer = (fromId, message) => {\n      var signal = JSON.parse(message);\n\n      if (fromId !== socketId) {\n        if (signal.sdp) {\n          connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\n            if (signal.sdp.type === \"offer\") {\n              connections[fromId].createAnswer().then(description => {\n                connections[fromId].setLocalDescription(description).then(() => {\n                  socket.emit(\"signal\", fromId, JSON.stringify({\n                    sdp: connections[fromId].localDescription\n                  }));\n                }).catch(e => console.log(e));\n              }).catch(e => console.log(e));\n            }\n          }).catch(e => console.log(e));\n        }\n\n        if (signal.ice) {\n          connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e));\n        }\n      }\n    };\n\n    this.changeCssVideos = main => {\n      let widthMain = main.offsetWidth;\n      let minWidth = \"30%\";\n\n      if (widthMain * 30 / 100 < 300) {\n        minWidth = \"300px\";\n      }\n\n      let minHeight = \"40%\";\n      let height = String(100 / elms) + \"%\";\n      let width = \"\";\n\n      if (elms === 0 || elms === 1) {\n        width = \"90%\";\n        height = \"90%\";\n      } else if (elms === 2) {\n        width = \"45%\";\n        height = \"100%\";\n      } else if (elms === 3 || elms === 4) {\n        width = \"35%\";\n        height = \"50%\";\n      } else {\n        width = String(100 / elms) + \"%\";\n      }\n\n      let videos = main.querySelectorAll(\"video\");\n\n      for (let a = 0; a < videos.length; ++a) {\n        videos[a].style.setProperty(\"borderColor\", \"#001529\");\n        videos[a].style.setProperty(\"bordeRadius\", \"50px\");\n        videos[a].style.minWidth = minWidth;\n        videos[a].style.minHeight = minHeight;\n        videos[a].style.setProperty(\"width\", width);\n        videos[a].style.setProperty(\"height\", height);\n      }\n\n      return {\n        minWidth,\n        minHeight,\n        width,\n        height\n      };\n    };\n\n    this.connectToSocketServer = () => {\n      socket = io.connect(server_url, {\n        secure: true\n      });\n      socket.on(\"signal\", this.gotMessageFromServer);\n      socket.on(\"connect\", () => {\n        socket.emit(\"join-call\", window.location.href);\n        socketId = socket.id;\n        socket.on(\"chat-message\", this.addMessage);\n        socket.on(\"user-left\", id => {\n          let video = document.querySelector(`[data-socket=\"${id}\"]`);\n\n          if (video !== null) {\n            elms--;\n            video.parentNode.removeChild(video);\n            let main = document.getElementById(\"main\");\n            this.changeCssVideos(main);\n          }\n        });\n        socket.on(\"user-joined\", (id, clients) => {\n          clients.forEach(socketListId => {\n            connections[socketListId] = new RTCPeerConnection(peerConnectionConfig); // Wait for their ice candidate\n\n            connections[socketListId].onicecandidate = function (event) {\n              if (event.candidate != null) {\n                socket.emit(\"signal\", socketListId, JSON.stringify({\n                  ice: event.candidate\n                }));\n              }\n            }; // Wait for their video stream\n\n\n            connections[socketListId].onaddstream = event => {\n              // TODO mute button, full screen button\n              var searchVidep = document.querySelector(`[data-socket=\"${socketListId}\"]`);\n\n              if (searchVidep !== null) {\n                // if i don't do this check it make an empyt square\n                searchVidep.srcObject = event.stream;\n              } else {\n                elms = clients.length;\n                let main = document.getElementById(\"main\");\n                let cssMesure = this.changeCssVideos(main);\n                let video = document.createElement(\"video\");\n                let css = {\n                  minWidth: cssMesure.minWidth,\n                  minHeight: cssMesure.minHeight,\n                  maxHeight: \"100%\",\n                  margin: \"10px\",\n                  borderStyle: \"solid\",\n                  borderColor: \"#bdbdbd\",\n                  objectFit: \"fill\"\n                };\n\n                for (let i in css) video.style[i] = css[i];\n\n                video.style.setProperty(\"width\", cssMesure.width);\n                video.style.setProperty(\"height\", cssMesure.height);\n                video.setAttribute(\"data-socket\", socketListId);\n                video.srcObject = event.stream;\n                video.autoplay = true;\n                video.playsinline = true;\n                main.appendChild(video);\n              }\n            }; // Add the local video stream\n\n\n            if (window.localStream !== undefined && window.localStream !== null) {\n              connections[socketListId].addStream(window.localStream);\n            } else {\n              let blackSilence = (...args) => new MediaStream([this.black(...args), this.silence()]);\n\n              window.localStream = blackSilence();\n              connections[socketListId].addStream(window.localStream);\n            }\n          });\n\n          if (id === socketId) {\n            for (let id2 in connections) {\n              if (id2 === socketId) continue;\n\n              try {\n                connections[id2].addStream(window.localStream);\n              } catch (e) {}\n\n              connections[id2].createOffer().then(description => {\n                connections[id2].setLocalDescription(description).then(() => {\n                  socket.emit(\"signal\", id2, JSON.stringify({\n                    sdp: connections[id2].localDescription\n                  }));\n                }).catch(e => console.log(e));\n              });\n            }\n          }\n        });\n      });\n    };\n\n    this.silence = () => {\n      let ctx = new AudioContext();\n      let oscillator = ctx.createOscillator();\n      let dst = oscillator.connect(ctx.createMediaStreamDestination());\n      oscillator.start();\n      ctx.resume();\n      return Object.assign(dst.stream.getAudioTracks()[0], {\n        enabled: false\n      });\n    };\n\n    this.black = ({\n      width = 640,\n      height = 480\n    } = {}) => {\n      let canvas = Object.assign(document.createElement(\"canvas\"), {\n        width,\n        height\n      });\n      canvas.getContext(\"2d\").fillRect(0, 0, width, height);\n      let stream = canvas.captureStream();\n      return Object.assign(stream.getVideoTracks()[0], {\n        enabled: false\n      });\n    };\n\n    this.handleVideo = () => this.setState({\n      video: !this.state.video\n    }, () => this.getUserMedia());\n\n    this.handleAudio = () => this.setState({\n      audio: !this.state.audio\n    }, () => this.getUserMedia());\n\n    this.handleScreen = () => this.setState({\n      screen: !this.state.screen\n    }, () => this.getDislayMedia());\n\n    this.handleEndCall = () => {\n      try {\n        let tracks = this.localVideoref.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n        toast.error(\"You leave the Meeting!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      } catch (e) {}\n\n      window.location.href = \"/\";\n    };\n\n    this.openChat = () => this.setState({\n      showModal: true,\n      newmessages: 0\n    });\n\n    this.closeChat = () => this.setState({\n      showModal: false\n    });\n\n    this.handleMessage = e => this.setState({\n      message: e.target.value\n    });\n\n    this.addMessage = (data, sender, socketIdSender) => {\n      this.setState(prevState => ({\n        messages: [...prevState.messages, {\n          sender: sender,\n          data: data\n        }]\n      }));\n\n      if (socketIdSender !== socketId) {\n        this.setState({\n          newmessages: this.state.newmessages + 1\n        });\n      }\n    };\n\n    this.handleUsername = e => this.setState({\n      username: e.target.value\n    });\n\n    this.startRecord = () => {\n      socket.emit(\"message\", this.state.files);\n    };\n\n    this.sendMessage = () => {\n      socket.emit(\"chat-message\", this.state.message, this.state.username);\n      this.setState({\n        message: \"\",\n        sender: this.state.username\n      });\n    };\n\n    this.copyUrl = () => {\n      let text = window.location.href;\n\n      if (!navigator.clipboard) {\n        let textArea = document.createElement(\"textarea\");\n        textArea.value = text;\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n\n        try {\n          document.execCommand(\"copy\");\n          message.success(\"Link copied to clipboard!\");\n        } catch (err) {\n          message.error(\"Failed to copy\");\n        }\n\n        document.body.removeChild(textArea);\n        return;\n      }\n\n      navigator.clipboard.writeText(text).then(function () {\n        message.success(\"Link copied to clipboard!\");\n      }, () => {\n        message.error(\"Failed to copy\");\n      });\n    };\n\n    this.enumerateDevicesFunction = () => {\n      let select1 = document.getElementById(\"select1\");\n      let select3 = document.getElementById(\"select3\");\n      navigator.mediaDevices.enumerateDevices().then(function (devices) {\n        devices.forEach(function (deviceInfo) {\n          var option = document.createElement(\"option\");\n          option.value = deviceInfo.deviceId;\n\n          if (deviceInfo.kind === \"audioinput\") {\n            option.label = deviceInfo.label;\n            option.value = deviceInfo.deviceId; //  console.log(option.value);\n\n            select1.appendChild(option);\n          } else if (deviceInfo.kind === \"videoinput\") {\n            option.label = deviceInfo.label;\n            option.value = deviceInfo.deviceId; //  console.log(option.value);\n\n            select3.appendChild(option);\n          }\n        });\n      }).catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n    };\n\n    this.connect = () => this.setState({\n      askForUsername: false\n    }, () => this.getMedia());\n\n    this.isChrome = function () {\n      let userAgent = (navigator && (navigator.userAgent || \"\")).toLowerCase();\n      let vendor = (navigator && (navigator.vendor || \"\")).toLowerCase();\n      let matchChrome = /google inc/.test(vendor) ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/) : null; // let matchFirefox = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/)\n      // return matchChrome !== null || matchFirefox !== null\n\n      return matchChrome !== null;\n    };\n\n    this.localVideoref = /*#__PURE__*/React.createRef();\n    this.videoAvailable = false;\n    this.audioAvailable = false;\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      video: false,\n      audio: false,\n      screen: false,\n      showModal: false,\n      screenAvailable: false,\n      messages: [],\n      message: \"\",\n      newmessages: 0,\n      askForUsername: true,\n      username: \"\",\n      videos: [],\n      recording: false,\n      blur: false,\n      net: null\n    };\n    connections = {};\n    this.getPermissions();\n  }\n\n  startBlur(e) {\n    this.setState({\n      blur: true\n    });\n    this.runHandpose();\n  }\n\n  stopBlur(e) {\n    this.setState({\n      blur: false\n    });\n    alert(\"ADEUS\");\n  }\n\n  startRecording(e) {\n    e.preventDefault(); // wipe old data chunks\n\n    this.chunks = []; // start recorder with 10ms buffer\n\n    this.mediaRecorder.start(100);\n    toast(\"🎬 You start recording!\", {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    }); // say that we're recording\n\n    this.setState({\n      recording: true\n    });\n  }\n\n  stopRecording(e) {\n    e.preventDefault(); // stop the recorder\n\n    this.mediaRecorder.stop();\n    toast.dark(\"🛑 You stop recording!\", {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    }); // say that we're not recording\n\n    this.setState({\n      recording: false\n    }); // save the video to memory\n\n    this.saveVideo();\n  }\n\n  saveVideo() {\n    // convert saved chunks to blob\n    const blob = new Blob(this.chunks, {\n      type: \"video/mp4\"\n    }); // generate video url from blob\n\n    const videoURL = window.URL.createObjectURL(blob); // append videoURL to list of saved videos for rendering\n\n    const videos = this.state.videos.concat([videoURL]);\n    this.setState({\n      videos\n    });\n  }\n\n  deleteVideo(videoURL) {\n    // filter out current videoURL from the list of saved videos\n    const videos = this.state.videos.filter(v => v !== videoURL);\n    this.setState({\n      videos\n    });\n  }\n\n  render() {\n    const {\n      recording,\n      videos,\n      blur\n    } = this.state;\n\n    if (this.isChrome() === false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: \"white\",\n          width: \"30%\",\n          height: \"auto\",\n          padding: \"20px\",\n          minWidth: \"400px\",\n          textAlign: \"center\",\n          margin: \"auto\",\n          marginTop: \"50px\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sorry, this works only with Google Chrome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.askForUsername === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card1 card-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Set your username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            required: true,\n            label: \"Username\",\n            value: this.state.username,\n            onChange: e => this.handleUsername(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.connect,\n            disabled: !this.state.username,\n            style: {\n              margin: \"20px\"\n            },\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            paddingTop: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            id: \"my-video\",\n            ref: this.localVideoref,\n            autoPlay: true,\n            muted: true,\n            style: {\n              borderRadius: \"50px\",\n              borderStyle: \"solid\",\n              borderColor: \"#001529\",\n              objectFit: \"fill\",\n              width: \"100%\",\n              height: \"30%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          style: {\n            background: \"#969696\"\n          },\n          children: videos.map((videoURL, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-3 pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              style: {\n                width: 200\n              },\n              src: videoURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 830,\n                  columnNumber: 34\n                }, this),\n                onClick: () => this.deleteVideo(videoURL),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 838,\n                  columnNumber: 34\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  style: {\n                    textDecoration: \"none\"\n                  },\n                  className: \"text-white\",\n                  target: \"_blank\",\n                  href: videoURL,\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 19\n            }, this)]\n          }, `video_${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#ecf0f3\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-down\",\n            style: {\n              backgroundColor: \"#001529\",\n              color: \"#001529\",\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: \"white\"\n              },\n              onClick: this.handleVideo,\n              children: this.state.video === true ? /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(VideocamOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: \"#f44336\"\n              },\n              onClick: this.handleEndCall,\n              children: /*#__PURE__*/_jsxDEV(CallEndIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: \"white\"\n              },\n              onClick: this.handleAudio,\n              children: this.state.audio === true ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 17\n            }, this), !recording && /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: \"white\"\n              },\n              onClick: e => this.startRecording(e),\n              children: /*#__PURE__*/_jsxDEV(PlayCircleFilledWhiteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 19\n            }, this), recording && /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: \"#f44336\"\n              },\n              onClick: e => this.stopRecording(e),\n              children: /*#__PURE__*/_jsxDEV(StopIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 19\n            }, this), !blur && /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: \"white\"\n              },\n              onClick: e => this.startBlur(e),\n              children: /*#__PURE__*/_jsxDEV(BlurOnIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 19\n            }, this), blur && /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: \"#f44336\"\n              },\n              onClick: e => this.stopBlur(e),\n              children: /*#__PURE__*/_jsxDEV(BlurOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 19\n            }, this), this.state.screenAvailable === true ? /*#__PURE__*/_jsxDEV(IconButton, {\n              style: {\n                color: \"white\"\n              },\n              onClick: this.handleScreen,\n              children: this.state.screen === true ? /*#__PURE__*/_jsxDEV(ScreenShareIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(StopScreenShareIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Badge, {\n              badgeContent: this.state.newmessages,\n              max: 999,\n              color: \"secondary\",\n              onClick: this.openChat,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                style: {\n                  color: \"white\"\n                },\n                onClick: this.openChat,\n                children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 946,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: this.state.showModal,\n            onHide: this.closeChat,\n            style: {\n              zIndex: \"999999\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Chat Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              style: {\n                overflow: \"auto\",\n                overflowY: \"auto\",\n                height: \"400px\",\n                textAlign: \"left\"\n              },\n              children: this.state.messages.length > 0 ? this.state.messages.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"left\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    wordBreak: \"break-all\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: item.sender\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 971,\n                    columnNumber: 27\n                  }, this), \": \", item.data]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 970,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No messages yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 976,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              className: \"div-send-msg\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Message\",\n                value: this.state.message,\n                onChange: e => this.handleMessage(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: this.sendMessage,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingTop: \"20px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                value: window.location.href,\n                disable: \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  backgroundColor: \"#3f51b5\",\n                  color: \"whitesmoke\",\n                  marginLeft: \"20px\",\n                  marginTop: \"10px\",\n                  width: \"120px\",\n                  fontSize: \"10px\"\n                },\n                onClick: this.copyUrl,\n                children: \"Copy invite link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"select1\",\n                  children: \"Audio Source: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1015,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: this.state.video,\n                  id: \"select1\",\n                  className: \"pr-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1016,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"select__arrow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1021,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"select3\",\n                  children: \"Video Source: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1024,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: this.state.audio,\n                  id: \"select3\",\n                  className: \"pr-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"select__arrow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1030,\n                  columnNumber: 21\n                }, this), this.enumerateDevicesFunction()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              id: \"main\",\n              className: \"flex-container\",\n              style: {\n                margin: 0,\n                padding: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"video\", {\n                id: \"my-video\",\n                ref: this.localVideoref,\n                autoPlay: true,\n                muted: true,\n                style: {\n                  borderRadius: \"50px\",\n                  borderStyle: \"solid\",\n                  borderColor: \"#001529\",\n                  margin: \"10px\",\n                  objectFit: \"fill\",\n                  width: \"90%\",\n                  height: \"90%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n                ref: this.canvasRef,\n                style: {\n                  borderRadius: \"50px\",\n                  borderStyle: \"solid\",\n                  borderColor: \"#001529\",\n                  margin: \"10px\",\n                  objectFit: \"fill\",\n                  width: \"90%\",\n                  height: \"90%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Room;","map":{"version":3,"sources":["/Users/user/GitHub/remotesports/client/src/pages/Room.js"],"names":["React","Component","io","toast","auth","db","IconButton","Badge","Input","Button","VideocamIcon","VideocamOffIcon","MicIcon","MicOffIcon","PlayCircleFilledWhiteIcon","StopIcon","ScreenShareIcon","StopScreenShareIcon","CallEndIcon","ChatIcon","TextField","Typography","message","SaveIcon","DeleteIcon","Row","Modal","BlurOnIcon","BlurOffIcon","handpose","tf","videoType","server_url","process","env","NODE_ENV","connections","peerConnectionConfig","iceServers","urls","socket","socketId","elms","Room","constructor","props","runHandpose","net","load","console","log","setInterval","detect","localVideoref","current","video","readyState","videoWidth","videoHeight","width","height","canvasRef","hand","estimateHands","ctx","getContext","drawHand","getPermissions","navigator","mediaDevices","getUserMedia","then","videoAvailable","catch","audio","audioAvailable","getDisplayMedia","setState","screenAvailable","stream","window","localStream","srcObject","e","getMedia","connectToSocketServer","state","getUserMediaSuccess","tracks","getTracks","forEach","track","stop","mediaRecorder","MediaRecorder","mimeType","chunks","ondataavailable","data","size","push","id","addStream","createOffer","description","setLocalDescription","emit","JSON","stringify","sdp","localDescription","onended","blackSilence","args","MediaStream","black","silence","getDislayMedia","screen","getDislayMediaSuccess","gotMessageFromServer","fromId","signal","parse","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","changeCssVideos","main","widthMain","offsetWidth","minWidth","minHeight","String","videos","querySelectorAll","a","length","style","setProperty","connect","secure","on","location","href","addMessage","document","querySelector","parentNode","removeChild","getElementById","clients","socketListId","RTCPeerConnection","onicecandidate","event","candidate","onaddstream","searchVidep","cssMesure","createElement","css","maxHeight","margin","borderStyle","borderColor","objectFit","i","setAttribute","autoplay","playsinline","appendChild","undefined","id2","AudioContext","oscillator","createOscillator","dst","createMediaStreamDestination","start","resume","Object","assign","getAudioTracks","enabled","canvas","fillRect","captureStream","getVideoTracks","handleVideo","handleAudio","handleScreen","handleEndCall","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","openChat","showModal","newmessages","closeChat","handleMessage","target","value","sender","socketIdSender","prevState","messages","handleUsername","username","startRecord","files","sendMessage","copyUrl","text","clipboard","textArea","body","focus","select","execCommand","success","err","writeText","enumerateDevicesFunction","select1","select3","enumerateDevices","devices","deviceInfo","option","deviceId","kind","label","name","askForUsername","isChrome","userAgent","toLowerCase","vendor","matchChrome","test","match","createRef","recording","blur","startBlur","stopBlur","alert","startRecording","preventDefault","stopRecording","dark","saveVideo","blob","Blob","videoURL","URL","createObjectURL","concat","deleteVideo","filter","v","render","background","padding","textAlign","marginTop","justifyContent","paddingTop","borderRadius","map","textDecoration","backgroundColor","color","zIndex","overflow","overflowY","item","index","wordBreak","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { toast } from \"react-toastify\";\nimport { auth, db } from \"../firebase\";\nimport { IconButton, Badge, Input, Button } from \"@material-ui/core\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport ScreenShareIcon from \"@material-ui/icons/ScreenShare\";\nimport StopScreenShareIcon from \"@material-ui/icons/StopScreenShare\";\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { message } from \"antd\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport \"antd/dist/antd.css\";\nimport { Row } from \"reactstrap\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../css/Room.css\";\nimport BlurOnIcon from \"@material-ui/icons/BlurOn\";\nimport BlurOffIcon from \"@material-ui/icons/BlurOff\";\n\nimport handpose from \"@tensorflow-models/handpose\";\nimport * as tf from \"@tensorflow/tfjs\";\n\n// mimeType - The mimeType read-only property returns the MIME\n// media type that was specified when creating the\n// MediaRecorder object,\nconst videoType = \"video/webm;codecs=vp8\";\n\nconst server_url =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://remotesports.herokuapp.com/\"\n    : \"http://localhost:5000\";\n\nvar connections = {};\nconst peerConnectionConfig = {\n  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n};\nvar socket = io(server_url);\nvar socketId = null;\nvar elms = 0;\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n\n    this.localVideoref = React.createRef();\n\n    this.videoAvailable = false;\n    this.audioAvailable = false;\n\n    this.canvasRef = React.createRef();\n\n    this.state = {\n      video: false,\n      audio: false,\n      screen: false,\n      showModal: false,\n      screenAvailable: false,\n      messages: [],\n      message: \"\",\n      newmessages: 0,\n      askForUsername: true,\n      username: \"\",\n      videos: [],\n      recording: false,\n      blur: false,\n      net: null,\n    };\n    connections = {};\n\n    this.getPermissions();\n  }\n\n  runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  detect = async (net) => {\n    // Check data is available\n    if (\n      typeof this.localVideoref.current !== \"undefined\" &&\n      this.localVideoref.current !== null &&\n      this.localVideoref.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = this.localVideoref.current.video;\n      const videoWidth = this.localVideoref.current.video.videoWidth;\n      const videoHeight = this.localVideoref.current.video.videoHeight;\n\n      // Set video width\n      this.localVideoref.current.video.width = videoWidth;\n      this.localVideoref.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const hand = await net.estimateHands(video);\n      console.log(hand);\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  getPermissions = async () => {\n    try {\n      await navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then(() => (this.videoAvailable = true))\n        .catch(() => (this.videoAvailable = false));\n\n      await navigator.mediaDevices\n        .getUserMedia({ audio: true })\n        .then(() => (this.audioAvailable = true))\n        .catch(() => (this.audioAvailable = false));\n\n      if (navigator.mediaDevices.getDisplayMedia) {\n        this.setState({ screenAvailable: true });\n      } else {\n        this.setState({ screenAvailable: false });\n      }\n\n      if (this.videoAvailable || this.audioAvailable) {\n        navigator.mediaDevices\n          .getUserMedia({\n            video: this.videoAvailable,\n            audio: this.audioAvailable,\n          })\n          .then((stream) => {\n            window.localStream = stream;\n            this.localVideoref.current.srcObject = stream;\n          })\n          .then((stream) => {})\n          .catch((e) => console.log(e));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  getMedia = () => {\n    // Primeira função a ser lida\n    // Tentamos ir buscar o video e audio do utilizador\n    this.setState(\n      {\n        video: this.videoAvailable,\n        audio: this.audioAvailable,\n      },\n      () => {\n        this.getUserMedia(); //atribuir media ao utilizador\n        this.connectToSocketServer(); // conecção a sala\n      }\n    );\n  };\n\n  getUserMedia = () => {\n    if (\n      (this.state.video && this.videoAvailable) ||\n      (this.state.audio && this.audioAvailable)\n    ) {\n      // se conseguirmos atribuir a media e audio ao utilizador\n      navigator.mediaDevices\n        .getUserMedia({ video: this.state.video, audio: this.state.audio })\n        .then(this.getUserMediaSuccess)\n        .then((stream) => {})\n        .catch((e) => console.log(e));\n    } else {\n      try {\n        let tracks = this.localVideoref.current.srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n      } catch (e) {}\n    }\n  };\n\n  getUserMediaSuccess = (stream) => {\n    try {\n      window.localStream.getTracks().forEach((track) => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n\n    window.localStream = stream;\n    this.localVideoref.current.srcObject = stream;\n\n    this.mediaRecorder = new MediaRecorder(stream, {\n      mimeType: videoType,\n    });\n    // init data storage for video chunks\n    this.chunks = [];\n    // listen for data from media recorder\n    this.mediaRecorder.ondataavailable = (e) => {\n      if (e.data && e.data.size > 0) {\n        this.chunks.push(e.data);\n      }\n    };\n\n    for (let id in connections) {\n      if (id === socketId) continue;\n\n      connections[id].addStream(window.localStream);\n\n      connections[id].createOffer().then((description) => {\n        connections[id]\n          .setLocalDescription(description)\n          .then(() => {\n            socket.emit(\n              \"signal\",\n              id,\n              JSON.stringify({ sdp: connections[id].localDescription })\n            );\n          })\n          .catch((e) => console.log(e));\n      });\n    }\n\n    stream.getTracks().forEach(\n      (track) =>\n        (track.onended = () => {\n          this.setState(\n            {\n              video: false,\n              audio: false,\n            },\n            () => {\n              try {\n                let tracks = this.localVideoref.current.srcObject.getTracks();\n                tracks.forEach((track) => track.stop());\n              } catch (e) {\n                console.log(e);\n              }\n\n              let blackSilence = (...args) =>\n                new MediaStream([this.black(...args), this.silence()]);\n              window.localStream = blackSilence();\n              this.localVideoref.current.srcObject = window.localStream;\n\n              for (let id in connections) {\n                connections[id].addStream(window.localStream);\n\n                connections[id].createOffer().then((description) => {\n                  connections[id]\n                    .setLocalDescription(description)\n                    .then(() => {\n                      socket.emit(\n                        \"signal\",\n                        id,\n                        JSON.stringify({\n                          sdp: connections[id].localDescription,\n                        })\n                      );\n                    })\n                    .catch((e) => console.log(e));\n                });\n              }\n            }\n          );\n        })\n    );\n  };\n\n  getDislayMedia = () => {\n    //media a ser \"displayed\" do utilizador\n    if (this.state.screen) {\n      if (navigator.mediaDevices.getDisplayMedia) {\n        navigator.mediaDevices\n          .getDisplayMedia({ video: true, audio: true })\n          .then(this.getDislayMediaSuccess)\n          .then((stream) => {})\n          .catch((e) => console.log(e));\n      }\n    }\n  };\n\n  startBlur(e) {\n    this.setState({\n      blur: true,\n    });\n\n    this.runHandpose();\n  }\n\n  stopBlur(e) {\n    this.setState({\n      blur: false,\n    });\n\n    alert(\"ADEUS\");\n  }\n\n  startRecording(e) {\n    e.preventDefault();\n    // wipe old data chunks\n    this.chunks = [];\n    // start recorder with 10ms buffer\n    this.mediaRecorder.start(100);\n\n    toast(\"🎬 You start recording!\", {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    // say that we're recording\n    this.setState({ recording: true });\n  }\n\n  stopRecording(e) {\n    e.preventDefault();\n    // stop the recorder\n    this.mediaRecorder.stop();\n\n    toast.dark(\"🛑 You stop recording!\", {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n\n    // say that we're not recording\n    this.setState({ recording: false });\n    // save the video to memory\n    this.saveVideo();\n  }\n\n  saveVideo() {\n    // convert saved chunks to blob\n    const blob = new Blob(this.chunks, { type: \"video/mp4\" });\n\n    // generate video url from blob\n    const videoURL = window.URL.createObjectURL(blob);\n\n    // append videoURL to list of saved videos for rendering\n    const videos = this.state.videos.concat([videoURL]);\n    this.setState({ videos });\n  }\n\n  deleteVideo(videoURL) {\n    // filter out current videoURL from the list of saved videos\n    const videos = this.state.videos.filter((v) => v !== videoURL);\n    this.setState({ videos });\n  }\n\n  getDislayMediaSuccess = (stream) => {\n    try {\n      window.localStream.getTracks().forEach((track) => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n\n    window.localStream = stream;\n    this.localVideoref.current.srcObject = stream;\n\n    for (let id in connections) {\n      if (id === socketId) continue;\n\n      connections[id].addStream(window.localStream); //adicionar a stream do utilizador\n\n      connections[id].createOffer().then((description) => {\n        connections[id]\n          .setLocalDescription(description)\n          .then(() => {\n            socket.emit(\n              \"signal\",\n              id,\n              JSON.stringify({ sdp: connections[id].localDescription })\n            );\n          })\n          .catch((e) => console.log(e));\n      });\n    }\n\n    stream.getTracks().forEach(\n      (track) =>\n        (track.onended = () => {\n          this.setState(\n            {\n              screen: false,\n            },\n            () => {\n              try {\n                let tracks = this.localVideoref.current.srcObject.getTracks();\n                tracks.forEach((track) => track.stop());\n              } catch (e) {\n                console.log(e);\n              }\n\n              let blackSilence = (...args) =>\n                new MediaStream([this.black(...args), this.silence()]);\n              window.localStream = blackSilence();\n              this.localVideoref.current.srcObject = window.localStream;\n\n              this.getUserMedia();\n            }\n          );\n        })\n    );\n  };\n\n  gotMessageFromServer = (fromId, message) => {\n    var signal = JSON.parse(message);\n\n    if (fromId !== socketId) {\n      if (signal.sdp) {\n        connections[fromId]\n          .setRemoteDescription(new RTCSessionDescription(signal.sdp))\n          .then(() => {\n            if (signal.sdp.type === \"offer\") {\n              connections[fromId]\n                .createAnswer()\n                .then((description) => {\n                  connections[fromId]\n                    .setLocalDescription(description)\n                    .then(() => {\n                      socket.emit(\n                        \"signal\",\n                        fromId,\n                        JSON.stringify({\n                          sdp: connections[fromId].localDescription,\n                        })\n                      );\n                    })\n                    .catch((e) => console.log(e));\n                })\n                .catch((e) => console.log(e));\n            }\n          })\n          .catch((e) => console.log(e));\n      }\n\n      if (signal.ice) {\n        connections[fromId]\n          .addIceCandidate(new RTCIceCandidate(signal.ice))\n          .catch((e) => console.log(e));\n      }\n    }\n  };\n\n  changeCssVideos = (main) => {\n    let widthMain = main.offsetWidth;\n    let minWidth = \"30%\";\n    if ((widthMain * 30) / 100 < 300) {\n      minWidth = \"300px\";\n    }\n    let minHeight = \"40%\";\n\n    let height = String(100 / elms) + \"%\";\n    let width = \"\";\n    if (elms === 0 || elms === 1) {\n      width = \"90%\";\n      height = \"90%\";\n    } else if (elms === 2) {\n      width = \"45%\";\n      height = \"100%\";\n    } else if (elms === 3 || elms === 4) {\n      width = \"35%\";\n      height = \"50%\";\n    } else {\n      width = String(100 / elms) + \"%\";\n    }\n\n    let videos = main.querySelectorAll(\"video\");\n    for (let a = 0; a < videos.length; ++a) {\n      videos[a].style.setProperty(\"borderColor\", \"#001529\");\n      videos[a].style.setProperty(\"bordeRadius\", \"50px\");\n      videos[a].style.minWidth = minWidth;\n      videos[a].style.minHeight = minHeight;\n      videos[a].style.setProperty(\"width\", width);\n      videos[a].style.setProperty(\"height\", height);\n    }\n\n    return { minWidth, minHeight, width, height };\n  };\n\n  connectToSocketServer = () => {\n    socket = io.connect(server_url, { secure: true });\n\n    socket.on(\"signal\", this.gotMessageFromServer);\n\n    socket.on(\"connect\", () => {\n      socket.emit(\"join-call\", window.location.href);\n      socketId = socket.id;\n\n      socket.on(\"chat-message\", this.addMessage);\n\n      socket.on(\"user-left\", (id) => {\n        let video = document.querySelector(`[data-socket=\"${id}\"]`);\n        if (video !== null) {\n          elms--;\n          video.parentNode.removeChild(video);\n\n          let main = document.getElementById(\"main\");\n          this.changeCssVideos(main);\n        }\n      });\n\n      socket.on(\"user-joined\", (id, clients) => {\n        clients.forEach((socketListId) => {\n          connections[socketListId] = new RTCPeerConnection(\n            peerConnectionConfig\n          );\n          // Wait for their ice candidate\n          connections[socketListId].onicecandidate = function (event) {\n            if (event.candidate != null) {\n              socket.emit(\n                \"signal\",\n                socketListId,\n                JSON.stringify({ ice: event.candidate })\n              );\n            }\n          };\n\n          // Wait for their video stream\n          connections[socketListId].onaddstream = (event) => {\n            // TODO mute button, full screen button\n            var searchVidep = document.querySelector(\n              `[data-socket=\"${socketListId}\"]`\n            );\n            if (searchVidep !== null) {\n              // if i don't do this check it make an empyt square\n              searchVidep.srcObject = event.stream;\n            } else {\n              elms = clients.length;\n              let main = document.getElementById(\"main\");\n              let cssMesure = this.changeCssVideos(main);\n\n              let video = document.createElement(\"video\");\n\n              let css = {\n                minWidth: cssMesure.minWidth,\n                minHeight: cssMesure.minHeight,\n                maxHeight: \"100%\",\n                margin: \"10px\",\n                borderStyle: \"solid\",\n                borderColor: \"#bdbdbd\",\n                objectFit: \"fill\",\n              };\n              for (let i in css) video.style[i] = css[i];\n\n              video.style.setProperty(\"width\", cssMesure.width);\n              video.style.setProperty(\"height\", cssMesure.height);\n              video.setAttribute(\"data-socket\", socketListId);\n              video.srcObject = event.stream;\n              video.autoplay = true;\n              video.playsinline = true;\n\n              main.appendChild(video);\n            }\n          };\n\n          // Add the local video stream\n          if (window.localStream !== undefined && window.localStream !== null) {\n            connections[socketListId].addStream(window.localStream);\n          } else {\n            let blackSilence = (...args) =>\n              new MediaStream([this.black(...args), this.silence()]);\n            window.localStream = blackSilence();\n            connections[socketListId].addStream(window.localStream);\n          }\n        });\n\n        if (id === socketId) {\n          for (let id2 in connections) {\n            if (id2 === socketId) continue;\n\n            try {\n              connections[id2].addStream(window.localStream);\n            } catch (e) {}\n\n            connections[id2].createOffer().then((description) => {\n              connections[id2]\n                .setLocalDescription(description)\n                .then(() => {\n                  socket.emit(\n                    \"signal\",\n                    id2,\n                    JSON.stringify({ sdp: connections[id2].localDescription })\n                  );\n                })\n                .catch((e) => console.log(e));\n            });\n          }\n        }\n      });\n    });\n  };\n\n  silence = () => {\n    let ctx = new AudioContext();\n    let oscillator = ctx.createOscillator();\n    let dst = oscillator.connect(ctx.createMediaStreamDestination());\n    oscillator.start();\n    ctx.resume();\n    return Object.assign(dst.stream.getAudioTracks()[0], { enabled: false });\n  };\n  black = ({ width = 640, height = 480 } = {}) => {\n    let canvas = Object.assign(document.createElement(\"canvas\"), {\n      width,\n      height,\n    });\n    canvas.getContext(\"2d\").fillRect(0, 0, width, height);\n    let stream = canvas.captureStream();\n    return Object.assign(stream.getVideoTracks()[0], { enabled: false });\n  };\n\n  handleVideo = () =>\n    this.setState({ video: !this.state.video }, () => this.getUserMedia());\n  handleAudio = () =>\n    this.setState({ audio: !this.state.audio }, () => this.getUserMedia());\n  handleScreen = () =>\n    this.setState({ screen: !this.state.screen }, () => this.getDislayMedia());\n\n  handleEndCall = () => {\n    try {\n      let tracks = this.localVideoref.current.srcObject.getTracks();\n      tracks.forEach((track) => track.stop());\n      toast.error(\"You leave the Meeting!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } catch (e) {}\n    window.location.href = \"/\";\n  };\n\n  openChat = () => this.setState({ showModal: true, newmessages: 0 });\n  closeChat = () => this.setState({ showModal: false });\n  handleMessage = (e) => this.setState({ message: e.target.value });\n\n  addMessage = (data, sender, socketIdSender) => {\n    this.setState((prevState) => ({\n      messages: [...prevState.messages, { sender: sender, data: data }],\n    }));\n    if (socketIdSender !== socketId) {\n      this.setState({ newmessages: this.state.newmessages + 1 });\n    }\n  };\n\n  handleUsername = (e) => this.setState({ username: e.target.value });\n\n  startRecord = () => {\n    socket.emit(\"message\", this.state.files);\n  };\n\n  sendMessage = () => {\n    socket.emit(\"chat-message\", this.state.message, this.state.username);\n    this.setState({ message: \"\", sender: this.state.username });\n  };\n\n  copyUrl = () => {\n    let text = window.location.href;\n    if (!navigator.clipboard) {\n      let textArea = document.createElement(\"textarea\");\n      textArea.value = text;\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      try {\n        document.execCommand(\"copy\");\n        message.success(\"Link copied to clipboard!\");\n      } catch (err) {\n        message.error(\"Failed to copy\");\n      }\n      document.body.removeChild(textArea);\n      return;\n    }\n    navigator.clipboard.writeText(text).then(\n      function () {\n        message.success(\"Link copied to clipboard!\");\n      },\n      () => {\n        message.error(\"Failed to copy\");\n      }\n    );\n  };\n\n  enumerateDevicesFunction = () => {\n    let select1 = document.getElementById(\"select1\");\n    let select3 = document.getElementById(\"select3\");\n\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then(function (devices) {\n        devices.forEach(function (deviceInfo) {\n          var option = document.createElement(\"option\");\n          option.value = deviceInfo.deviceId;\n\n          if (deviceInfo.kind === \"audioinput\") {\n            option.label = deviceInfo.label;\n            option.value = deviceInfo.deviceId;\n\n            //  console.log(option.value);\n\n            select1.appendChild(option);\n          } else if (deviceInfo.kind === \"videoinput\") {\n            option.label = deviceInfo.label;\n            option.value = deviceInfo.deviceId;\n\n            //  console.log(option.value);\n\n            select3.appendChild(option);\n          }\n        });\n      })\n      .catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n  };\n\n  connect = () =>\n    this.setState({ askForUsername: false }, () => this.getMedia());\n\n  isChrome = function () {\n    let userAgent = (navigator && (navigator.userAgent || \"\")).toLowerCase();\n    let vendor = (navigator && (navigator.vendor || \"\")).toLowerCase();\n    let matchChrome = /google inc/.test(vendor)\n      ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/)\n      : null;\n    // let matchFirefox = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/)\n    // return matchChrome !== null || matchFirefox !== null\n    return matchChrome !== null;\n  };\n\n  render() {\n    const { recording, videos, blur } = this.state;\n\n    if (this.isChrome() === false) {\n      return (\n        <div\n          style={{\n            background: \"white\",\n            width: \"30%\",\n            height: \"auto\",\n            padding: \"20px\",\n            minWidth: \"400px\",\n            textAlign: \"center\",\n            margin: \"auto\",\n            marginTop: \"50px\",\n            justifyContent: \"center\",\n          }}\n        >\n          <h1>Sorry, this works only with Google Chrome</h1>\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.askForUsername === true ? (\n          <div className=\"card1 card-2\">\n            <div className=\"text-center\">\n              <Typography component=\"h1\" variant=\"h5\">\n                Set your username\n              </Typography>\n              <TextField\n                fullWidth\n                required\n                label=\"Username\"\n                value={this.state.username}\n                onChange={(e) => this.handleUsername(e)}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.connect}\n                disabled={!this.state.username}\n                style={{ margin: \"20px\" }}\n              >\n                Connect\n              </Button>\n            </div>\n            <div\n              style={{\n                justifyContent: \"center\",\n                textAlign: \"center\",\n                paddingTop: \"10px\",\n              }}\n            >\n              <video\n                id=\"my-video\"\n                ref={this.localVideoref}\n                autoPlay\n                muted\n                style={{\n                  borderRadius: \"50px\",\n                  borderStyle: \"solid\",\n                  borderColor: \"#001529\",\n                  objectFit: \"fill\",\n                  width: \"100%\",\n                  height: \"30%\",\n                }}\n              ></video>\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"text-center\" style={{ background: \"#969696\" }}>\n              {videos.map((videoURL, i) => (\n                <div className=\"pt-3 pb-3\" key={`video_${i}`}>\n                  <video style={{ width: 200 }} src={videoURL} />\n                  <div>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      startIcon={<DeleteIcon />}\n                      onClick={() => this.deleteVideo(videoURL)}\n                    >\n                      Delete\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      startIcon={<SaveIcon />}\n                    >\n                      <a\n                        style={{ textDecoration: \"none\" }}\n                        className=\"text-white\"\n                        target=\"_blank\"\n                        href={videoURL}\n                      >\n                        Download\n                      </a>\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div style={{ background: \"#ecf0f3\" }}>\n              <div\n                className=\"btn-down\"\n                style={{\n                  backgroundColor: \"#001529\",\n                  color: \"#001529\",\n                  textAlign: \"center\",\n                }}\n              >\n                <IconButton\n                  style={{ color: \"white\" }}\n                  onClick={this.handleVideo}\n                >\n                  {this.state.video === true ? (\n                    <VideocamIcon />\n                  ) : (\n                    <VideocamOffIcon />\n                  )}\n                </IconButton>\n\n                <IconButton\n                  style={{ color: \"#f44336\" }}\n                  onClick={this.handleEndCall}\n                >\n                  <CallEndIcon />\n                </IconButton>\n\n                <IconButton\n                  style={{ color: \"white\" }}\n                  onClick={this.handleAudio}\n                >\n                  {this.state.audio === true ? <MicIcon /> : <MicOffIcon />}\n                </IconButton>\n\n                {!recording && (\n                  <IconButton\n                    style={{ color: \"white\" }}\n                    onClick={(e) => this.startRecording(e)}\n                  >\n                    <PlayCircleFilledWhiteIcon />\n                  </IconButton>\n                )}\n\n                {recording && (\n                  <IconButton\n                    style={{ color: \"#f44336\" }}\n                    onClick={(e) => this.stopRecording(e)}\n                  >\n                    <StopIcon />\n                  </IconButton>\n                )}\n\n                {!blur && (\n                  <IconButton\n                    style={{ color: \"white\" }}\n                    onClick={(e) => this.startBlur(e)}\n                  >\n                    <BlurOnIcon />\n                  </IconButton>\n                )}\n\n                {blur && (\n                  <IconButton\n                    style={{ color: \"#f44336\" }}\n                    onClick={(e) => this.stopBlur(e)}\n                  >\n                    <BlurOffIcon />\n                  </IconButton>\n                )}\n\n                {this.state.screenAvailable === true ? (\n                  <IconButton\n                    style={{ color: \"white\" }}\n                    onClick={this.handleScreen}\n                  >\n                    {this.state.screen === true ? (\n                      <ScreenShareIcon />\n                    ) : (\n                      <StopScreenShareIcon />\n                    )}\n                  </IconButton>\n                ) : null}\n\n                <Badge\n                  badgeContent={this.state.newmessages}\n                  max={999}\n                  color=\"secondary\"\n                  onClick={this.openChat}\n                >\n                  <IconButton\n                    style={{ color: \"white\" }}\n                    onClick={this.openChat}\n                  >\n                    <ChatIcon />\n                  </IconButton>\n                </Badge>\n              </div>\n\n              <Modal\n                show={this.state.showModal}\n                onHide={this.closeChat}\n                style={{ zIndex: \"999999\" }}\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Chat Room</Modal.Title>\n                </Modal.Header>\n                <Modal.Body\n                  style={{\n                    overflow: \"auto\",\n                    overflowY: \"auto\",\n                    height: \"400px\",\n                    textAlign: \"left\",\n                  }}\n                >\n                  {this.state.messages.length > 0 ? (\n                    this.state.messages.map((item, index) => (\n                      <div key={index} style={{ textAlign: \"left\" }}>\n                        <p style={{ wordBreak: \"break-all\" }}>\n                          <b>{item.sender}</b>: {item.data}\n                        </p>\n                      </div>\n                    ))\n                  ) : (\n                    <p>No messages yet</p>\n                  )}\n                </Modal.Body>\n                <Modal.Footer className=\"div-send-msg\">\n                  <Input\n                    placeholder=\"Message\"\n                    value={this.state.message}\n                    onChange={(e) => this.handleMessage(e)}\n                  />\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.sendMessage}\n                  >\n                    Send\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n\n              <div className=\"container\">\n                <div style={{ paddingTop: \"20px\" }}>\n                  <Input value={window.location.href} disable=\"true\"></Input>\n                  <Button\n                    style={{\n                      backgroundColor: \"#3f51b5\",\n                      color: \"whitesmoke\",\n                      marginLeft: \"20px\",\n                      marginTop: \"10px\",\n                      width: \"120px\",\n                      fontSize: \"10px\",\n                    }}\n                    onClick={this.copyUrl}\n                  >\n                    Copy invite link\n                  </Button>\n                  <br />\n                </div>\n                <div className=\"pt-4\">\n                  <div className=\"select\">\n                    <label for=\"select1\">Audio Source: </label>\n                    <select\n                      value={this.state.video}\n                      id=\"select1\"\n                      className=\"pr-3\"\n                    ></select>\n                    <div className=\"select__arrow\"></div>\n                  </div>\n                  <div className=\"select\">\n                    <label for=\"select3\">Video Source: </label>\n                    <select\n                      value={this.state.audio}\n                      id=\"select3\"\n                      className=\"pr-3\"\n                    ></select>\n                    <div className=\"select__arrow\"></div>\n                    {this.enumerateDevicesFunction()}\n                  </div>\n                </div>\n\n                <Row\n                  id=\"main\"\n                  className=\"flex-container\"\n                  style={{ margin: 0, padding: 0 }}\n                >\n                  <video\n                    id=\"my-video\"\n                    ref={this.localVideoref}\n                    autoPlay\n                    muted\n                    style={{\n                      borderRadius: \"50px\",\n                      borderStyle: \"solid\",\n                      borderColor: \"#001529\",\n                      margin: \"10px\",\n                      objectFit: \"fill\",\n                      width: \"90%\",\n                      height: \"90%\",\n                    }}\n                  ></video>\n                  <canvas\n                    ref={this.canvasRef}\n                    style={{\n                      borderRadius: \"50px\",\n                      borderStyle: \"solid\",\n                      borderColor: \"#001529\",\n                      margin: \"10px\",\n                      objectFit: \"fill\",\n                      width: \"90%\",\n                      height: \"90%\",\n                    }}\n                  />\n                </Row>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}